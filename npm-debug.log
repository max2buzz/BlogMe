0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'memcached' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose cache add [ 'memcached', null ]
6 verbose cache add name=undefined spec="memcached" args=["memcached",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'memcached',
7 verbose parsed url   path: 'memcached',
7 verbose parsed url   href: 'memcached' }
8 silly lockFile ebf4a2fb-memcached memcached
9 verbose lock memcached C:\Users\Shreyas\AppData\Roaming\npm-cache\ebf4a2fb-memcached.lock
10 silly lockFile ebf4a2fb-memcached memcached
11 silly lockFile ebf4a2fb-memcached memcached
12 verbose addNamed [ 'memcached', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile 4fff8afc-memcached memcached@
15 verbose lock memcached@ C:\Users\Shreyas\AppData\Roaming\npm-cache\4fff8afc-memcached.lock
16 silly addNameRange { name: 'memcached', range: '*', hasData: false }
17 verbose url raw memcached
18 verbose url resolving [ 'https://registry.npmjs.org/', './memcached' ]
19 verbose url resolved https://registry.npmjs.org/memcached
20 info trying registry request attempt 1 at 18:31:53
21 verbose etag "1646QHV0JSGX3HBM43CBI5F13"
22 http GET https://registry.npmjs.org/memcached
23 http 304 https://registry.npmjs.org/memcached
24 silly registry.get cb [ 304,
24 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:54 GMT',
24 silly registry.get     server: 'Apache',
24 silly registry.get     via: '1.1 varnish',
24 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:55 GMT',
24 silly registry.get     'cache-control': 'max-age=60',
24 silly registry.get     etag: '"1646QHV0JSGX3HBM43CBI5F13"',
24 silly registry.get     age: '0',
24 silly registry.get     'x-served-by': 'cache-dfw1821-DFW',
24 silly registry.get     'x-cache': 'HIT',
24 silly registry.get     'x-cache-hits': '1',
24 silly registry.get     'x-timer': 'S1417998714.798346,VS0,VE262',
24 silly registry.get     vary: 'Accept',
24 silly registry.get     'content-length': '0',
24 silly registry.get     'keep-alive': 'timeout=10, max=50',
24 silly registry.get     connection: 'Keep-Alive' } ]
25 verbose etag memcached from cache
26 silly addNameRange number 2 { name: 'memcached', range: '*', hasData: true }
27 silly addNameRange versions [ 'memcached',
27 silly addNameRange   [ '0.0.1',
27 silly addNameRange     '0.0.2',
27 silly addNameRange     '0.0.3',
27 silly addNameRange     '0.0.4',
27 silly addNameRange     '0.0.5',
27 silly addNameRange     '0.1.0',
27 silly addNameRange     '0.1.1',
27 silly addNameRange     '0.1.2',
27 silly addNameRange     '0.1.3',
27 silly addNameRange     '0.1.4',
27 silly addNameRange     '0.1.5',
27 silly addNameRange     '0.2.0',
27 silly addNameRange     '0.0.7',
27 silly addNameRange     '0.0.6',
27 silly addNameRange     '0.0.8',
27 silly addNameRange     '0.0.9',
27 silly addNameRange     '0.0.10',
27 silly addNameRange     '0.0.11',
27 silly addNameRange     '0.0.12',
27 silly addNameRange     '0.2.1',
27 silly addNameRange     '0.2.2',
27 silly addNameRange     '0.2.3',
27 silly addNameRange     '0.2.4',
27 silly addNameRange     '0.2.5',
27 silly addNameRange     '0.2.6',
27 silly addNameRange     '0.2.7',
27 silly addNameRange     '0.2.8',
27 silly addNameRange     '1.0.0',
27 silly addNameRange     '2.0.0' ] ]
28 verbose addNamed [ 'memcached', '2.0.0' ]
29 verbose addNamed [ '2.0.0', '2.0.0' ]
30 silly lockFile 7114931d-memcached-2-0-0 memcached@2.0.0
31 verbose lock memcached@2.0.0 C:\Users\Shreyas\AppData\Roaming\npm-cache\7114931d-memcached-2-0-0.lock
32 silly lockFile 7114931d-memcached-2-0-0 memcached@2.0.0
33 silly lockFile 7114931d-memcached-2-0-0 memcached@2.0.0
34 silly lockFile 4fff8afc-memcached memcached@
35 silly lockFile 4fff8afc-memcached memcached@
36 silly resolved [ { name: 'memcached',
36 silly resolved     version: '2.0.0',
36 silly resolved     author: { name: 'Arnout Kazemier' },
36 silly resolved     description: 'A fully featured Memcached API client, supporting both single and clustered Memcached servers through consistent hashing and failover/failure. Memcached is rewrite of nMemcached, which will be deprecated in the near future.',
36 silly resolved     main: 'index',
36 silly resolved     keywords:
36 silly resolved      [ 'InnoDB memcached API',
36 silly resolved        'cache',
36 silly resolved        'client',
36 silly resolved        'cluster',
36 silly resolved        'failover',
36 silly resolved        'hashing',
36 silly resolved        'membase',
36 silly resolved        'memcache',
36 silly resolved        'memcached',
36 silly resolved        'nMemcached',
36 silly resolved        'nosql' ],
36 silly resolved     license: 'MIT',
36 silly resolved     repository:
36 silly resolved      { type: 'git',
36 silly resolved        url: 'http://github.com/3rd-Eden/node-memcached.git' },
36 silly resolved     dependencies: { hashring: '3.0.x', jackpot: '>=0.0.6' },
36 silly resolved     devDependencies: { mocha: '*', should: '*', 'pre-commit': '*' },
36 silly resolved     scripts: { test: 'mocha $(find test -name \'*.test.js\')' },
36 silly resolved     readme: '# Memcached [![Build Status](https://secure.travis-ci.org/3rd-Eden/node-memcached.png?branch=master)](http://travis-ci.org/3rd-Eden/node-memcached)\n\n`memcached` is a fully featured Memcached client for Node.js. `memcached` is\nbuilt with scaling, high availability and exceptional performance in mind. We\nuse consistent hashing to store the data across different nodes. Consistent\nhashing is a scheme that provides a hash table functionality in a way that\nadding or removing a server node does not significantly change the mapping of\nthe keys to server nodes. The algorithm that is used for consistent hashing is\nthe same as `libketama`.\n\nThere are different ways to handle errors for example, when a server becomes\nunavailable you can configure the client to see all requests to that server as\ncache misses until it goes up again. It\'s also possible to automatically remove\nthe affected server from the consistent hashing algorithm or provide `memcached`\nwith a failover server that can take the place of the unresponsive server.\n\nWhen these issues occur the `memcached` client will emit different events where\nyou can subscribe to containing detailed information about the issues.\n\nThe client is configurable on different levels. There\'s a global configuration\nthat you update so all your Memcached clusters will use the same failure\nconfiguration for example, but it\'s also possible to overwrite these changes per\n`memcached` instance.\n\n### protocol\n\nAs in other databases and message queues, this module uses the ASCII protocol to communicate with\nthe server, which means that you can see what is send over the wire. For debugging this is easier\nfor both the users and the developers however this also means that SASL auth is not supported\nbecause it demands the binary protocol.\n\n## Setting up the client\n\nThe constructor of the `memcached` client take 2 different arguments `server\nlocations` and `options`. Syntax:\n\n``` js\nvar Memcached = require(\'memcached\');\nvar memcached = new Memcached(Server locations, options);\n```\n\n### Server locations\n\nThe server locations is designed to work with different formats. These formats\nare all internally parsed to the correct format so our consistent hashing scheme\ncan work with it. You can either use:\n\n1. **String**, this only works if you are running a single server instance\n   of Memcached.  It\'s as easy a suppling a string in the following format:\n   `hostname:port`. For example `192.168.0.102:11211` This would tell the client\n   to connect to host `192.168.0.102` on port number `11211`.\n\n2. **Array**, if you are running a single server you would only have to supply\n  one item in the array.  The array format is particularly useful if you are\n  running a cluster of Memcached servers. This will allow you to spread the keys\n  and load between the different servers. Giving you higher availability\n  when one of your Memcached servers goes down.\n\n3. **Object**, when running a cluster of Memcached servers, some servers may allocate different amounts of memory, e.g. 128, 512, and 128mb. While by default all servers are equally important and dispatch consistently the keys between the servers (33/33/33%), it is possible to send more keys in servers having more memory. To do so, define an object whose `key` represents the server location and whose value represents a server weight, the default weight for a server being 1; so, for instance `{ \'192.168.0.102:11211\': 1, \'192.168.0.103:11211\': 2, \'192.168.0.104:11211\': 1 }` distributes 50% of the keys on server 103, but only 25% on 104 and 25% on 102.\n\nTo implement one of the above formats, your constructor would look like this:\n\n```js\nvar memcached = new Memcached({ \'192.168.0.102:11211\': 1, \'192.168.0.103:11211\': 2, \'192.168.0.104:11211\': 1 });\nvar memcached = new Memcached([ \'192.168.0.102:11211\', \'192.168.0.103:11211\', \'192.168.0.104:11211\' ]);\nvar memcached = new Memcached(\'192.168.0.102:11211\');\n```\n\n### Options\n\nMemcached accepts two option schemes. The first one inherits of all Memcached server instances\nwhile the second one is client specific and overwrites the globals. To define these options,\nMemcached server uses the same properties:\n\n* `maxKeySize`: *250*, the maximum key size allowed.\n* `maxExpiration`: *2592000*, the maximum expiration time of keys (in seconds).\n* `maxValue`: *1048576*, the maximum size of a value.\n* `poolSize`: *10*, the maximum size of the connection pool.\n* `algorithm`: *md5*, the hashing algorithm used to generate the `hashRing` values.\n* `reconnect`: *18000000*, the time between reconnection attempts (in milliseconds).\n* `timeout`: *5000*, the time after which Memcached sends a connection timeout (in milliseconds).\n* `retries`: *5*, the number of socket allocation retries per request.\n* `failures`: *5*, the number of failed-attempts to a server before it is regarded as \'dead\'.\n* `retry`: *30000*, the time between a server failure and an attempt to set it up back in service.\n* `remove`: *false*, if *true*, authorizes the automatic removal of dead servers from the pool.\n* `failOverServers`: *undefined*, an array of `server_locations` to replace servers that fail and\n that are removed from the consistent hashing scheme.\n* `keyCompression`: *true*, whether to use `md5` as hashing scheme when keys exceed `maxKeySize`.\n* `idle`: *5000*, the idle timeout for the connections.\n\nExample usage:\n\n```js\nvar memcached = new Memcached(\'localhost:11211\', {retries:10,retry:10000,remove:true,failOverServers:[\'192.168.0.103:11211\']});\n```\n\nIf you wish to configure the options globally:\n\n```js\nvar Memcached = require(\'memcached\');\n// all global configurations should be applied to the .config object of the Client.\nMemcached.config.poolSize = 25;\n```\n\n## API\n\n### Public methods\n\n**memcached.touch** Touches the given key.\n\n* `key`: **String** The key\n* `lifetime`: **Number** After how long should the key expire measured in `seconds`\n* `callback`: **Function**\n\n```js\nmemcached.touch(\'key\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.get** Get the value for the given key.\n\n* `key`: **String**, the key\n* `callback`: **Function**, the callback.\n\n```js\nmemcached.get(\'foo\', function (err, data) {\n  console.log(data);\n});\n```\n\n**memcached.gets** Get the value and the CAS id.\n\n* `key`: **String**, the key\n* `callback`: **Function**, the callback.\n\n```js\nmemcached.gets(\'foo\', function (err, data) {\n  console.log(data.foo);\n  console.log(data.cas);\n\n  // Please note that the data is stored under the name of the given key.\n});\n```\n**memcached.getMulti** Retrieves a bunch of values from multiple keys.\n\n* `keys`: **Array**, all the keys that needs to be fetched\n* `callback`: **Function**, the callback.\n\n```js\nmemcached.getMulti([\'foo\', \'bar\'], function (err, data) {\n  console.log(data.foo);\n  console.log(data.bar);\n});\n```\n\n**memcached.set** Stores a new value in Memcached.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `lifetime`: **Number**, how long the data needs to be stored measured in `seconds`\n* `callback`: **Function** the callback\n\n```js\nmemcached.set(\'foo\', \'bar\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.replace** Replaces the value in memcached.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `lifetime`: **Number**, how long the data needs to be replaced measured in `seconds`\n* `callback`: **Function** the callback\n\n```js\nmemcached.replace(\'foo\', \'bar\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.add** Add the value, only if it\'s not in memcached already.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `lifetime`: **Number**, how long the data needs to be replaced measured in `seconds`\n* `callback`: **Function** the callback\n\n```js\nmemcached.add(\'foo\', \'bar\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.cas** Add the value, only if it matches the given CAS value.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `lifetime`: **Number**, how long the data needs to be replaced measured in `seconds`\n* `cas`: **String** the CAS value\n* `callback`: **Function** the callback\n\n```js\nmemcached.gets(\'foo\', function (err, data) {\n  memcached.cas(\'foo\', \'bar\', data.cas, 10, function (err) { /* stuff */ });\n});\n```\n\n**memcached.append** Add the given value string to the value of an existing item.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `callback`: **Function** the callback\n\n```js\nmemcached.append(\'foo\', \'bar\', function (err) { /* stuff */ });\n```\n\n**memcached.prepend** Add the given value string to the value of an existing item.\n\n* `key`: **String** the name of the key\n* `value`: **Mixed** Either a buffer, JSON, number or string that you want to store.\n* `callback`: **Function** the callback\n\n```js\nmemcached.preprend(\'foo\', \'bar\', function (err) { /* stuff */ });\n```\n\n**memcached.incr** Increment a given key.\n\n* `key`: **String** the name of the key\n* `amount`: **Number** The increment\n* `callback`: **Function** the callback\n\n```js\nmemcached.incr(\'foo\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.decr** Decrement a given key.\n\n* `key`: **String** the name of the key\n* `amount`: **Number** The increment\n* `callback`: **Function** the callback\n\n```js\nmemcached.decr(\'foo\', 10, function (err) { /* stuff */ });\n```\n\n**memcached.del** Remove the key from memcached.\n\n* `key`: **String** the name of the key\n* `callback`: **Function** the callback\n\n```js\nmemcached.del(\'foo\', function (err) { /* stuff */ });\n```\n\n**memcached.version** Retrieves the version number of your server.\n\n* `callback`\n\n**memcached.flush** Flushes the memcached server.\n\n* `callback`\n\n**memcached.stats** Retrieves stats from your memcached server.\n\n* `callback`\n\n**memcached.settings** Retrieves your `stats settings`.\n\n* `callback`\n\n**memcached.slabs** Retrieves `stats slabs` information.\n\n* `callback`\n\n**memcached.items** Retrieves `stats items` information.\n\n* `callback`\n\n**memcached.cachedump** Inspect cache, see examples for a detailed explanation.\n\n* `server`\n* `slabid`\n* `number`\n* `callback`\n\n**memcached.end** Closes all active memcached connections.\n\n### Private methods\n\nThe following methods are intended for private usage\n\n**.connect** Fetches or generates a connection for the given server. The supplied callback\nfunction will receive a reference to the connection as argument.\nIf there are issues with the server connection, we are going to respond with cache-miss pattern.\n\n* `server`: *String*, The server that needs a connection, the format must be\nconfirm the server_locations specification.\n* `callback`: *Function*, The callback function that receives the net.Stre\n\n``` js\nmemcached.connect( \'192.168.0.103:11211\', function( err, conn ){\n  if( err ) throw new Error( err );\n  console.log( conn.server );\n});\n```\n\n**.multi** A small wrapper function that makes it easier to query multiple Memcached\nservers. It will return the location for each key or the complete list of\nservers.\n\n* `keys`: *Array* **(optional)**, They keys that needs to be converted to a server.\n* `callback`: *Function*, The callback function for the data, it will be called\nfor **each** key. It will be called with 4 arguments:\n\n1. `server`: *String*, The server location.\n2. `key`: *String*, The key associated with the server, if you didn\'t specify\n   keys, this variable will be undefined.\n3. `index`: *Number*, The current index of the loop\n4. `total`: *Number*, The total amount server retrieved.\n\n``` js\nmemcached.multi( false, function( server, key, index, totals ){\n  if( err ) throw new Error( err );\n\n  this.connect( server, function( err, conn ){\n    console.log( "connection ready" )\n  })\n});\n```\n\n**.command** This is the core functionality of the `memcached` client. All public API\'s are\nrouted through this function. It takes care of the argument validations Server\nretrieval ( If the server argument isn\'t specified ). After all data ready a\nconnection is asked for the private `connect` method and the command is written\nto the Memcached server.\n\n* `query`: *Object*, The metaData object, see the `Callbacks` section for the\nspecification.\n* `server`: *String*, The server the to connect. This is only needed when the\nmetaData object doesn\'t contain a key property to retrieve the server from.\n\n``` js\nmemcached.command({\n  key: \'key\', callback: function(){ console.dir( arguments ); },\n\n  // validate the arguments\n  validate: [[ \'key\', String ], [ \'callback\', Function ]],\n\n  // used for the query\n  type: \'delete\',\n  command: \'delete key\'\n});\n```\n\n**.connectionIssue** A internal function for logging issues with connections. As there can be various\nof ways that an error occurs we need solid issue manager to handle all these\ncases. For example server could crash or the Memcached server could respond with\n`SERVER ERROR <broken>`.\n\n* `error`: *String*, The actual error message.\n* `Stream`: *net.Stream*, A reference to the connection stream where the error\noccurred on.\n* `callback`: *Function* **(optional)**, The callback function of a potential\nrequest, it will be marked as cache miss if it was provided\n\n``` js\nmemcached.connectionIssue( "Server down", connectionReference );\n```\n\n## Callbacks\n\nEach method requires a callback function. Once this function get executed there\nwill be 2 variables applied:\n\n* `error`: A error response if something went wrong while retrieving data from\n  the Memcached server. Depending on the type of request this will either be an\n  string or an Array with multiple errors.\n* `response`: The actual result from the Memcached server. If the response is\n  `false` or `undefined` than a cache miss occurred. Cache misses will also\n  occur when there is an error. So you might want to check on errors first.\n\nWhen we have a successful response, the context of the callback function will\nshift to a metaData object. The metaData object contains all information that we\nused to generate the request for the Memcached server. The metaData object\ncontains the following properties:\n\n* `start`: Date in milliseconds when the request was received\n* `execution`: Total execution time for the request, including response parsing.\n* `callback`: Reference to the callback function\n* `type`: The type of Memcached command\n* `command`: The compiled command that was send through the sockets\n* `validate`: The properties of metaData object that needs type validation.\n\nAnd all the arguments you have send to the method, this depends on the method\nyou have called.\n\n## Events\n\nWhen connection issues occur we send out different notifications using the\n`EventEmitter` protocol. This can be useful for logging, notification and\ndebugging purposes. Each event will receive details Object containing detailed\ninformation about the issues that occurred.\n\n### Details Object\n\nThe details Object contains the various of error messages that caused, the\nfollowing 3 will always be present in all error events:\n\n* `server`: the server where the issue occurred on\n* `tokens`: a array of the parsed server string in `[port, hostname]` format.\n* `messages`: a array containing all error messages that this server received.\n  As messages are added to the array using .push(), the first issue will at the\n  beginning and the latest error at the end of the array.\n\nThe following properties depend on the type of event that is send. If we are\nstill in our retry phase the details will also contain:\n\n* `failures`: the amount of failures left before we mark the server as dead.\n* `totalFailures`: the total amount of failures that occurred on this server, as when the\n  server has been reconnected after it\'s dead the `failures` will be rest to\n  defaults and messages will be removed.\n\nIf the server is dead these details will be added:\n\n* `totalReconnectsAttempted`: the total reconnects we have attempted. This is\nthe success and failure combined.\n* `totalReconnectsSuccess`: the total successful reconnects we have made.\n* `totalReconnectsFailed`: the total failed reconnects we have made.\n* `totalDownTime`: the total down time that was generated. Formula: (\n  totalReconnectsFailed * reconnect_timeout ) + ( totalRetries * retry_timeout).\n\n### Events\n\nThere are `5` different events that the `memcached` client emits when connection\nissues occur.\n\n* `issue`: a issue occurred on one a server, we are going to attempt a retry next.\n* `failure`: a server has been marked as failure or dead.\n* `reconnecting`: we are going to attempt to reconnect the to the failed server.\n* `reconnected`: successfully reconnected to the memcached server.\n* `remove`: removing the server from our consistent hashing.\n\nExample implementations:\n\n```js\nvar memcached = new Memcached([ \'192.168.0.102:11211\', \'192.168.0.103:11211\' ]);\nmemcached.on(\'failure\', function( details ){ sys.error( "Server " + details.server + "went down due to: " + details.messages.join( \'\' ) ) });\nmemcached.on(\'reconnecting\', function( details ){ sys.debug( "Total downtime caused by server " + details.server + " :" + details.totalDownTime + "ms")});\n```\n\n# Compatibility\nFor compatibility with other [libmemcached](http://libmemcached.org/Clients.html) clients they need to have the behavior\n`ketama_weighted` set to true and the `hash` set to the same as `node-memcached`\'s\n`algorithm`.\n\nDue to client dependent type flags it is unlikely that any types other than `string` will work.\n\n# Contributors\n\nThis project wouldn\'t be possible without the hard work of our amazing\ncontributors. See the contributors tab in Github for an up to date list of\n[contributors](/3rd-Eden/node-memcached/graphs/contributors).\n\nThanks for all your hard work on this project!\n\n# License\n\nThe driver is released under the MIT license. See the\n[LICENSE](/3rd-Eden/node-memcached/blob/master/LICENSE) for more information.\n',
36 silly resolved     readmeFilename: 'README.md',
36 silly resolved     bugs: { url: 'https://github.com/3rd-Eden/node-memcached/issues' },
36 silly resolved     homepage: 'https://github.com/3rd-Eden/node-memcached',
36 silly resolved     _id: 'memcached@2.0.0',
36 silly resolved     _from: 'memcached@' } ]
37 info install memcached@2.0.0 into C:\Users\Shreyas\AppData\Roaming\npm
38 info installOne memcached@2.0.0
39 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached unbuild
40 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\memcached\2.0.0\package.tgz
41 silly lockFile 8ece401c-aming-npm-node-modules-memcached tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
42 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached C:\Users\Shreyas\AppData\Roaming\npm-cache\8ece401c-aming-npm-node-modules-memcached.lock
43 silly lockFile e2fed37a-ache-memcached-2-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\memcached\2.0.0\package.tgz
44 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\memcached\2.0.0\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\e2fed37a-ache-memcached-2-0-0-package-tgz.lock
45 silly gunzTarPerm modes [ '755', '644' ]
46 silly gunzTarPerm extractEntry package.json
47 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
48 silly gunzTarPerm extractEntry .npmignore
49 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
50 silly gunzTarPerm extractEntry README.md
51 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
52 silly gunzTarPerm extractEntry LICENSE
53 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
54 silly gunzTarPerm extractEntry index.js
55 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
56 silly gunzTarPerm extractEntry issues/1/index.js
57 silly gunzTarPerm modified mode [ 'issues/1/index.js', 438, 420 ]
58 silly gunzTarPerm extractEntry issues/1/bash.sh
59 silly gunzTarPerm modified mode [ 'issues/1/bash.sh', 438, 420 ]
60 silly gunzTarPerm extractEntry issues/1/test.sh
61 silly gunzTarPerm modified mode [ 'issues/1/test.sh', 438, 420 ]
62 silly gunzTarPerm extractEntry .travis.yml
63 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
64 silly gunzTarPerm extractEntry benchmarks/README.md
65 silly gunzTarPerm modified mode [ 'benchmarks/README.md', 438, 420 ]
66 silly gunzTarPerm extractEntry benchmarks/benchmark.js
67 silly gunzTarPerm modified mode [ 'benchmarks/benchmark.js', 438, 420 ]
68 silly gunzTarPerm extractEntry examples/simple_version.js
69 silly gunzTarPerm modified mode [ 'examples/simple_version.js', 438, 420 ]
70 silly gunzTarPerm extractEntry examples/simple_flush.js
71 silly gunzTarPerm modified mode [ 'examples/simple_flush.js', 438, 420 ]
72 silly gunzTarPerm extractEntry examples/simple_get.js
73 silly gunzTarPerm modified mode [ 'examples/simple_get.js', 438, 420 ]
74 silly gunzTarPerm extractEntry examples/simple_getmulti.js
75 silly gunzTarPerm modified mode [ 'examples/simple_getmulti.js', 438, 420 ]
76 silly gunzTarPerm extractEntry examples/simple_gets.js
77 silly gunzTarPerm modified mode [ 'examples/simple_gets.js', 438, 420 ]
78 silly gunzTarPerm extractEntry examples/simple_events.js
79 silly gunzTarPerm modified mode [ 'examples/simple_events.js', 438, 420 ]
80 silly gunzTarPerm extractEntry examples/simple_get_compression.js
81 silly gunzTarPerm modified mode [ 'examples/simple_get_compression.js', 438, 420 ]
82 silly gunzTarPerm extractEntry examples/simple_get_json.js
83 silly gunzTarPerm modified mode [ 'examples/simple_get_json.js', 438, 420 ]
84 silly gunzTarPerm extractEntry examples/simple_get_largefile.js
85 silly gunzTarPerm modified mode [ 'examples/simple_get_largefile.js', 438, 420 ]
86 silly gunzTarPerm extractEntry examples/simple_incr.js
87 silly gunzTarPerm modified mode [ 'examples/simple_incr.js', 438, 420 ]
88 silly gunzTarPerm extractEntry examples/simple_items.js
89 silly gunzTarPerm modified mode [ 'examples/simple_items.js', 438, 420 ]
90 silly gunzTarPerm extractEntry examples/simple_delete.js
91 silly gunzTarPerm modified mode [ 'examples/simple_delete.js', 438, 420 ]
92 silly gunzTarPerm extractEntry examples/simple_metaData.js
93 silly gunzTarPerm modified mode [ 'examples/simple_metaData.js', 438, 420 ]
94 silly gunzTarPerm extractEntry examples/simple_decr.js
95 silly gunzTarPerm modified mode [ 'examples/simple_decr.js', 438, 420 ]
96 silly gunzTarPerm extractEntry examples/simple_redundancy.js
97 silly gunzTarPerm modified mode [ 'examples/simple_redundancy.js', 438, 420 ]
98 silly gunzTarPerm extractEntry examples/simple_cas.js
99 silly gunzTarPerm modified mode [ 'examples/simple_cas.js', 438, 420 ]
100 silly gunzTarPerm extractEntry examples/simple_set.js
101 silly gunzTarPerm modified mode [ 'examples/simple_set.js', 438, 420 ]
102 silly gunzTarPerm extractEntry examples/simple_cachedump.js
103 silly gunzTarPerm modified mode [ 'examples/simple_cachedump.js', 438, 420 ]
104 silly gunzTarPerm extractEntry examples/simple_settings.js
105 silly gunzTarPerm modified mode [ 'examples/simple_settings.js', 438, 420 ]
106 silly gunzTarPerm extractEntry examples/queue_limit.js
107 silly gunzTarPerm modified mode [ 'examples/queue_limit.js', 438, 420 ]
108 silly gunzTarPerm extractEntry examples/simple_set_binary.js
109 silly gunzTarPerm modified mode [ 'examples/simple_set_binary.js', 438, 420 ]
110 silly gunzTarPerm extractEntry examples/memcached_local_config.js
111 silly gunzTarPerm modified mode [ 'examples/memcached_local_config.js', 438, 420 ]
112 silly gunzTarPerm extractEntry examples/simple_set_compression.js
113 silly gunzTarPerm modified mode [ 'examples/simple_set_compression.js', 438, 420 ]
114 silly gunzTarPerm extractEntry examples/memcached_global_config.js
115 silly gunzTarPerm modified mode [ 'examples/memcached_global_config.js', 438, 420 ]
116 silly gunzTarPerm extractEntry examples/simple_set_json.js
117 silly gunzTarPerm modified mode [ 'examples/simple_set_json.js', 438, 420 ]
118 silly gunzTarPerm extractEntry examples/memcached_connect_socket.js
119 silly gunzTarPerm modified mode [ 'examples/memcached_connect_socket.js', 438, 420 ]
120 silly gunzTarPerm extractEntry examples/simple_set_largefile.js
121 silly gunzTarPerm modified mode [ 'examples/simple_set_largefile.js', 438, 420 ]
122 silly gunzTarPerm extractEntry examples/memcached_connect.js
123 silly gunzTarPerm modified mode [ 'examples/memcached_connect.js', 438, 420 ]
124 silly gunzTarPerm extractEntry examples/simple_slabs.js
125 silly gunzTarPerm modified mode [ 'examples/simple_slabs.js', 438, 420 ]
126 silly gunzTarPerm extractEntry examples/consistent_hashing.js
127 silly gunzTarPerm modified mode [ 'examples/consistent_hashing.js', 438, 420 ]
128 silly gunzTarPerm extractEntry examples/simple_stats.js
129 silly gunzTarPerm modified mode [ 'examples/simple_stats.js', 438, 420 ]
130 silly gunzTarPerm extractEntry examples/cluster_memcached_connect.js
131 silly gunzTarPerm modified mode [ 'examples/cluster_memcached_connect.js', 438, 420 ]
132 silly gunzTarPerm extractEntry examples/simple_get_binary.js
133 silly gunzTarPerm modified mode [ 'examples/simple_get_binary.js', 438, 420 ]
134 silly gunzTarPerm extractEntry examples/binary/hotchicks.jpg
135 silly gunzTarPerm modified mode [ 'examples/binary/hotchicks.jpg', 438, 420 ]
136 silly gunzTarPerm extractEntry examples/binary/lipsum.txt
137 silly gunzTarPerm modified mode [ 'examples/binary/lipsum.txt', 438, 420 ]
138 silly gunzTarPerm extractEntry TODO
139 silly gunzTarPerm modified mode [ 'TODO', 438, 420 ]
140 silly gunzTarPerm extractEntry test/common.js
141 silly gunzTarPerm modified mode [ 'test/common.js', 438, 420 ]
142 silly gunzTarPerm extractEntry test/memcached-add.test.js
143 silly gunzTarPerm modified mode [ 'test/memcached-add.test.js', 438, 420 ]
144 silly gunzTarPerm extractEntry test/memcached-cas.test.js
145 silly gunzTarPerm modified mode [ 'test/memcached-cas.test.js', 438, 420 ]
146 silly gunzTarPerm extractEntry test/memcached-connections.test.js
147 silly gunzTarPerm modified mode [ 'test/memcached-connections.test.js', 438, 420 ]
148 silly gunzTarPerm extractEntry test/memcached-touch.test.js
149 silly gunzTarPerm modified mode [ 'test/memcached-touch.test.js', 438, 420 ]
150 silly gunzTarPerm extractEntry test/memcached-incr-decr.test.js
151 silly gunzTarPerm modified mode [ 'test/memcached-incr-decr.test.js', 438, 420 ]
152 silly gunzTarPerm extractEntry test/memcached-namespace.test.js
153 silly gunzTarPerm modified mode [ 'test/memcached-namespace.test.js', 438, 420 ]
154 silly gunzTarPerm extractEntry test/memcached-parser.test.js
155 silly gunzTarPerm modified mode [ 'test/memcached-parser.test.js', 438, 420 ]
156 silly gunzTarPerm extractEntry test/memcached-get-set.test.js
157 silly gunzTarPerm modified mode [ 'test/memcached-get-set.test.js', 438, 420 ]
158 silly gunzTarPerm extractEntry test/fixtures/hotchicks.jpg
159 silly gunzTarPerm modified mode [ 'test/fixtures/hotchicks.jpg', 438, 420 ]
160 silly gunzTarPerm extractEntry test/fixtures/lipsum.txt
161 silly gunzTarPerm modified mode [ 'test/fixtures/lipsum.txt', 438, 420 ]
162 silly gunzTarPerm extractEntry test/mocha.opts
163 silly gunzTarPerm modified mode [ 'test/mocha.opts', 438, 420 ]
164 silly gunzTarPerm extractEntry lib/connection.js
165 silly gunzTarPerm modified mode [ 'lib/connection.js', 438, 420 ]
166 silly gunzTarPerm extractEntry lib/memcached.js
167 silly gunzTarPerm modified mode [ 'lib/memcached.js', 438, 420 ]
168 silly gunzTarPerm extractEntry lib/utils.js
169 silly gunzTarPerm modified mode [ 'lib/utils.js', 438, 420 ]
170 silly lockFile 8ece401c-aming-npm-node-modules-memcached tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
171 silly lockFile 8ece401c-aming-npm-node-modules-memcached tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
172 silly lockFile e2fed37a-ache-memcached-2-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\memcached\2.0.0\package.tgz
173 silly lockFile e2fed37a-ache-memcached-2-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\memcached\2.0.0\package.tgz
174 info preinstall memcached@2.0.0
175 verbose readDependencies using package.json deps
176 verbose readDependencies using package.json deps
177 verbose cache add [ 'hashring@3.0.x', null ]
178 verbose cache add name=undefined spec="hashring@3.0.x" args=["hashring@3.0.x",null]
179 verbose parsed url { protocol: null,
179 verbose parsed url   slashes: null,
179 verbose parsed url   auth: null,
179 verbose parsed url   host: null,
179 verbose parsed url   port: null,
179 verbose parsed url   hostname: null,
179 verbose parsed url   hash: null,
179 verbose parsed url   search: null,
179 verbose parsed url   query: null,
179 verbose parsed url   pathname: 'hashring@3.0.x',
179 verbose parsed url   path: 'hashring@3.0.x',
179 verbose parsed url   href: 'hashring@3.0.x' }
180 verbose cache add name="hashring" spec="3.0.x" args=["hashring","3.0.x"]
181 verbose parsed url { protocol: null,
181 verbose parsed url   slashes: null,
181 verbose parsed url   auth: null,
181 verbose parsed url   host: null,
181 verbose parsed url   port: null,
181 verbose parsed url   hostname: null,
181 verbose parsed url   hash: null,
181 verbose parsed url   search: null,
181 verbose parsed url   query: null,
181 verbose parsed url   pathname: '3.0.x',
181 verbose parsed url   path: '3.0.x',
181 verbose parsed url   href: '3.0.x' }
182 verbose addNamed [ 'hashring', '3.0.x' ]
183 verbose addNamed [ null, '>=3.0.0-0 <3.1.0-0' ]
184 silly lockFile acaa99a1-hashring-3-0-x hashring@3.0.x
185 verbose lock hashring@3.0.x C:\Users\Shreyas\AppData\Roaming\npm-cache\acaa99a1-hashring-3-0-x.lock
186 verbose cache add [ 'jackpot@>=0.0.6', null ]
187 verbose cache add name=undefined spec="jackpot@>=0.0.6" args=["jackpot@>=0.0.6",null]
188 verbose parsed url { protocol: null,
188 verbose parsed url   slashes: null,
188 verbose parsed url   auth: null,
188 verbose parsed url   host: null,
188 verbose parsed url   port: null,
188 verbose parsed url   hostname: null,
188 verbose parsed url   hash: null,
188 verbose parsed url   search: null,
188 verbose parsed url   query: null,
188 verbose parsed url   pathname: 'jackpot@%3E=0.0.6',
188 verbose parsed url   path: 'jackpot@%3E=0.0.6',
188 verbose parsed url   href: 'jackpot@%3E=0.0.6' }
189 verbose cache add name="jackpot" spec=">=0.0.6" args=["jackpot",">=0.0.6"]
190 verbose parsed url { protocol: null,
190 verbose parsed url   slashes: null,
190 verbose parsed url   auth: null,
190 verbose parsed url   host: null,
190 verbose parsed url   port: null,
190 verbose parsed url   hostname: null,
190 verbose parsed url   hash: null,
190 verbose parsed url   search: null,
190 verbose parsed url   query: null,
190 verbose parsed url   pathname: '%3E=0.0.6',
190 verbose parsed url   path: '%3E=0.0.6',
190 verbose parsed url   href: '%3E=0.0.6' }
191 verbose addNamed [ 'jackpot', '>=0.0.6' ]
192 verbose addNamed [ null, '>=0.0.6' ]
193 silly lockFile 07444243-jackpot-0-0-6 jackpot@>=0.0.6
194 verbose lock jackpot@>=0.0.6 C:\Users\Shreyas\AppData\Roaming\npm-cache\07444243-jackpot-0-0-6.lock
195 silly addNameRange { name: 'hashring', range: '>=3.0.0-0 <3.1.0-0', hasData: false }
196 silly addNameRange { name: 'jackpot', range: '>=0.0.6', hasData: false }
197 verbose url raw hashring
198 verbose url resolving [ 'https://registry.npmjs.org/', './hashring' ]
199 verbose url resolved https://registry.npmjs.org/hashring
200 info trying registry request attempt 1 at 18:31:54
201 verbose etag "AUHG4WLL1NUOHHEVIWJPAZM27"
202 http GET https://registry.npmjs.org/hashring
203 verbose url raw jackpot
204 verbose url resolving [ 'https://registry.npmjs.org/', './jackpot' ]
205 verbose url resolved https://registry.npmjs.org/jackpot
206 info trying registry request attempt 1 at 18:31:54
207 verbose etag "7P9MGIKT6LUXYARL0J7AI426K"
208 http GET https://registry.npmjs.org/jackpot
209 http 304 https://registry.npmjs.org/hashring
210 silly registry.get cb [ 304,
210 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:56 GMT',
210 silly registry.get     server: 'Apache',
210 silly registry.get     via: '1.1 varnish',
210 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:56 GMT',
210 silly registry.get     'cache-control': 'max-age=60',
210 silly registry.get     etag: '"AUHG4WLL1NUOHHEVIWJPAZM27"',
210 silly registry.get     age: '0',
210 silly registry.get     'x-served-by': 'cache-dfw1830-DFW',
210 silly registry.get     'x-cache': 'MISS',
210 silly registry.get     'x-cache-hits': '0',
210 silly registry.get     'x-timer': 'S1417998716.443305,VS0,VE58',
210 silly registry.get     vary: 'Accept',
210 silly registry.get     'content-length': '0',
210 silly registry.get     'keep-alive': 'timeout=10, max=50',
210 silly registry.get     connection: 'Keep-Alive' } ]
211 verbose etag hashring from cache
212 silly addNameRange number 2 { name: 'hashring', range: '>=3.0.0-0 <3.1.0-0', hasData: true }
213 silly addNameRange versions [ 'hashring',
213 silly addNameRange   [ '0.0.1',
213 silly addNameRange     '0.0.2',
213 silly addNameRange     '0.0.3',
213 silly addNameRange     '0.0.4',
213 silly addNameRange     '0.0.5',
213 silly addNameRange     '0.0.6',
213 silly addNameRange     '0.0.7',
213 silly addNameRange     '0.0.8',
213 silly addNameRange     '1.0.0',
213 silly addNameRange     '1.0.1',
213 silly addNameRange     '1.0.2',
213 silly addNameRange     '1.0.3',
213 silly addNameRange     '2.0.0',
213 silly addNameRange     '2.0.1',
213 silly addNameRange     '2.0.2',
213 silly addNameRange     '3.0.0' ] ]
214 verbose addNamed [ 'hashring', '3.0.0' ]
215 verbose addNamed [ '3.0.0', '3.0.0' ]
216 silly lockFile 0f97d979-hashring-3-0-0 hashring@3.0.0
217 verbose lock hashring@3.0.0 C:\Users\Shreyas\AppData\Roaming\npm-cache\0f97d979-hashring-3-0-0.lock
218 silly lockFile 0f97d979-hashring-3-0-0 hashring@3.0.0
219 silly lockFile 0f97d979-hashring-3-0-0 hashring@3.0.0
220 silly lockFile acaa99a1-hashring-3-0-x hashring@3.0.x
221 silly lockFile acaa99a1-hashring-3-0-x hashring@3.0.x
222 http 304 https://registry.npmjs.org/jackpot
223 silly registry.get cb [ 304,
223 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:56 GMT',
223 silly registry.get     server: 'Apache',
223 silly registry.get     via: '1.1 varnish',
223 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:56 GMT',
223 silly registry.get     'cache-control': 'max-age=60',
223 silly registry.get     etag: '"7P9MGIKT6LUXYARL0J7AI426K"',
223 silly registry.get     age: '0',
223 silly registry.get     'x-served-by': 'cache-dfw1825-DFW',
223 silly registry.get     'x-cache': 'HIT',
223 silly registry.get     'x-cache-hits': '1',
223 silly registry.get     'x-timer': 'S1417998716.456562,VS0,VE179',
223 silly registry.get     vary: 'Accept',
223 silly registry.get     'content-length': '0',
223 silly registry.get     'keep-alive': 'timeout=10, max=50',
223 silly registry.get     connection: 'Keep-Alive' } ]
224 verbose etag jackpot from cache
225 silly addNameRange number 2 { name: 'jackpot', range: '>=0.0.6', hasData: true }
226 silly addNameRange versions [ 'jackpot',
226 silly addNameRange   [ '0.0.0', '0.0.1', '0.0.2', '0.0.3', '0.0.4', '0.0.5', '0.0.6' ] ]
227 verbose addNamed [ 'jackpot', '0.0.6' ]
228 verbose addNamed [ '0.0.6', '0.0.6' ]
229 silly lockFile 4f6bb84f-jackpot-0-0-6 jackpot@0.0.6
230 verbose lock jackpot@0.0.6 C:\Users\Shreyas\AppData\Roaming\npm-cache\4f6bb84f-jackpot-0-0-6.lock
231 silly lockFile 4f6bb84f-jackpot-0-0-6 jackpot@0.0.6
232 silly lockFile 4f6bb84f-jackpot-0-0-6 jackpot@0.0.6
233 silly lockFile 07444243-jackpot-0-0-6 jackpot@>=0.0.6
234 silly lockFile 07444243-jackpot-0-0-6 jackpot@>=0.0.6
235 silly resolved [ { name: 'hashring',
235 silly resolved     version: '3.0.0',
235 silly resolved     author: { name: 'Arnout Kazemier' },
235 silly resolved     description: 'A consistent hashring compatible with ketama hashing and python\'s hash_ring',
235 silly resolved     main: './index.js',
235 silly resolved     keywords:
235 silly resolved      [ 'hashring',
235 silly resolved        'hash ring',
235 silly resolved        'hashing',
235 silly resolved        'hashvalue',
235 silly resolved        'ketama',
235 silly resolved        'hash_ring',
235 silly resolved        'hash',
235 silly resolved        'consistent hashing',
235 silly resolved        'libketama' ],
235 silly resolved     license: 'MIT',
235 silly resolved     bugs: { url: 'http://github.com/3rd-Eden/node-hashring/issues' },
235 silly resolved     homepage: 'http://github.com/3rd-Eden/node-hashring/',
235 silly resolved     repository:
235 silly resolved      { type: 'git',
235 silly resolved        url: 'http://github.com/3rd-Eden/node-hashring.git' },
235 silly resolved     dependencies:
235 silly resolved      { bindings: '1.2.x',
235 silly resolved        'connection-parse': '0.0.x',
235 silly resolved        nan: '1.3.x',
235 silly resolved        'simple-lru-cache': '0.0.x' },
235 silly resolved     devDependencies:
235 silly resolved      { benchmark: '1.0.x',
235 silly resolved        devnull: '0.0.x',
235 silly resolved        mocha: '1.21.x',
235 silly resolved        'pre-commit': '0.0.x',
235 silly resolved        should: '4.0.x' },
235 silly resolved     scripts: { test: 'make test', install: 'node-gyp rebuild' },
235 silly resolved     gypfile: true,
235 silly resolved     readme: '# HashRing\n\nThe HashRing module provides consistent hashing that is compatible with the\noriginal libketama library that was developed at last.fm. In addition to beeing\ncompatible with `libketama` it\'s also compatible with the `hash_ring` module for\nPython. See the compatiblity section of the API for more details on this.\n\n### Build status\n\n[![BuildStatus](https://secure.travis-ci.org/3rd-Eden/node-hashring.png?branch=master)](http://travis-ci.org/3rd-Eden/node-hashring)\n\n## Installation\n\nThe advised installation of module is done through the Node package manager (npm).\n\n```\nnpm install hashring --save\n```\n\nThe `--save` parameter tells npm that it should automatically add the module to\nthe `dependencies` field in your package.json.\n\n## Usage\n\n```js\nvar HashRing = require(\'hashring\');\n```\n\nThe HashRing constructor is designed to handle different argument types as a\nconsistent hash ring can be use for different use cases. You can supply the\nconstructor with:\n\n#### String\n\nA single server, possible, but pointless in most cases if you only use one\nserver, then done use the HashRing at all, it only adds overhead.\n\n```js\nvar ring = new HashRing(\'127.0.0.1:11211\');\n```\n\n#### Array\n\nMultiple servers for the HashRing.\n\n```js\nvar ring = new HashRing([\'127.0.0.1:11211\', \'127.0.0.2:11211\']);\n```\n\n#### Object\n\nAn Object where the keys of the Object are the servers and the value can be a\n`Number` and it will be seen as weight for server. The value can also be an\nObject. Where the key can be a weight or a vnode.\n\nWeights or vnodes are used to give servers a bigger distribution in the\nHashRing. For example you have 3 servers where you want to distribute your keys\nover but not all servers are equal in capacity as 2 of those machines have 200mb\nof memory and the other has 3.2 gig of memory. The last server is substantially\nbigger and there for should receive a greater distrubtion in the ring.\n\nFor a rule of thumb use the amount of memory as weight:\n\n```js\nvar HashRing = require(\'hashring\');\n\nvar ring = new HashRing({\n  \'127.0.0.1:11211\': 200,\n  \'127.0.0.2:11211\': { weight: 200 }, // same as above\n  \'127.0.0.3:11211\': 3200\n});\n```\n\nIf you want create a server with multiple vnodes (virtual nodes):\n\n```js\nvar HashRing = require(\'hashring\');\n\nvar ring = new HashRing({\n  \'127.0.0.1:11211\': { vnodes: 50 },\n  \'127.0.0.2:11211\': { vnodes: 200 },\n  \'127.0.0.3:11211\': { vnodes: 100 }\n});\n```\n\n### Algorithm\n\nWith the second argument you can configure the algorithm that is used to hash\nthe keys. It defaults to `md5` and can only contain values that are accepted in\nNode\'s `crypto` API. Alternatively you can supply it with a function for a\ncustom hasher. But do note that the hashValue will be calculated on the result.\n\n### Options\n\n- `vnode count` The amount of virtual nodes per server, defaults to 40 as this\n  generates 160 points per server as used by ketama hashing.\n- `compatiblity` Allows you to force a compatibility mode of the HashRing. It\n  default to ketama hash rings but if you are coming from a python world you\n  might want compatibility with the `hash_ring` module. There\'s a small diff\n  between `hash_ring` and `ketama` and that\'s the amount of replica\'s of a server.\n  Ketama uses 4 and `hash_ring` uses 3. Set this to `hash_ring` if you want to\n  use 3.\n- `replicas` The amount of replicas per server. Defaults to 4.\n- `max cache size` We use a simple LRU cache inside the module to speed up\n  frequent key lookups, you can customize the amount of keys that need to be\n  cached. It defaults to 5000.\n- `default port` The default port number which will removed from the server\n  address to provide ketama compatibility.\n\n```js\n\'use strict\';\n\n// require the module, it returns a HashRing constructor\nvar HashRing = require(\'hashring\');\n\n// Setup hash rings with your servers, in this example I just assume that all\n// servers are equal, and we want to bump the cache size to 10.000 items.\nvar ring = new HashRing([\n    \'127.0.0.1\',\n    \'127.0.0.2\',\n    \'127.0.0.3\', \n    \'127.0.0.4\'\n  ], \'md5\', {\n    \'max cache size\': 10000\n  });\n\n// Now we are going to get some a server for a key\nring.get(\'foo bar banana\'); // returns 127.0.0.x\n\n// Or if you might want to do some replication scheme and store/fetch data from\n// multiple servers\nring.range(\'foo bar banana\', 2).forEach(function forEach(server) {\n  console.log(server); // do stuff with your server\n});\n\n// Add or remove a new a server to the ring, they accept the same arguments as\n// the constructor\nring.add(\'127.0.0.7\').remove(\'127.0.0.1\');\n```\n\n### API\'s Table of Contents\n\n- [HashRing.continuum()](#hashringcontinuum)\n- [HashRing.get()](#hashringgetkey)\n- [HashRing.range()](#hashringrangekey-size-unique)\n- [HashRing.swap()](#hashringswapfrom-to)\n- [HashRing.add()](#hashringaddserver)\n- [HashRing.remove()](#hashringremoveserver)\n- [HashRing.reset()](#hashringreset)\n- [HashRing.end()](#hashringend)\n\n#### HashRing.continuum()\n\nGenerates the continuum of server a.k.a as the Hash Ring based on their weights\nand virtual nodes assigned.\n\n---\n\n#### HashRing.get(**key**)\n\nFind the correct node for the key which is closest to the point after what the\ngiven key hashes to.\n\n- **key** String, Random key that needs to be searched in the hash ring\n\n**returns:** The matching server address.\n\n---\n\n#### HashRing.range(**key**, **size**, **unique**)\n\nReturns a range of servers. Could be useful for replication.\n\n- **key** String, Random key that needs to be searched in the hash ring\n- **size** Number, Amount items to be returned (maximum). Defaults to the amount\n  of servers that are in the hashring.\n- **unique** Boolean, Don\'t return duplicate servers. Defaults to true.\n\n**returns:** The array of servers that we found.\n\n---\n\n#### HashRing.swap(**from*, **to**)\n\nHotswap identical servers with each other. This doesn\'t require the cache to be\ncompletely nuked and the hash ring distribution to be re-calculated.\n\nPlease note that removing the server and a new adding server could potentially\ncreate a different distribution.\n\n- **from** String, The server that needs to be replaced\n- **to** String. The server that replaces the server\n\n---\n\n#### HashRing.add(**server**)\n\nAdd a new server to ring without having to re-initialize the hashring. It\naccepts the same arguments as you can use in the constructor.\n\n- **server** Server that need to be added to the ring.\n\n---\n\n#### HashRing.remove(**server**)\n\nRemove a server from the hash ring.\n\n- **server** Server that need to be removed from the ring.\n\n---\n\n#### HashRing.has(**server**)\n\nChecks if a given server exists in the hash ring.\n\n- **server** Server for whose existence we\'re checking.\n\n---\n\n#### HashRing.reset()\n\nReset the HashRing and clean up it\'s references.\n\n---\n\n### HashRing.end()\n\nReset\'s the HashRing and closes the ring.\n\n---\n\n#### HashRing.find(**hashValue**) (private)\n\nFinds the correct position of the given hashValue in the hashring.\n\n- **hashValue** Number, The hashValue from the HashRing#hashValue method.\n\n**returns:** Index of the value in the ring.\n\n---\n\n#### HashRing.hash(**key**) (private)\n\nGenerates the hash for the key.\n\n- **key** String, Random key that needs to be hashed.\n\n**returns:** The hashed valued.\n\n---\n\n#### HashRing.digest(**key**) (private)\n\nDigest hash so we can make a numeric representation from the hash. So it can be\nfed in to our hashValue.\n\n- **key** String, Random key that needs to be hashed.\n\n**returns:** An array of charCodeAt(0) converted chars.\n\n---\n\n#### HashRing.hashValue(**key**) (private)\n\nGet the hashed value of the given key, it does the digesting, hashing yo.\n\n- **key** String, Random key that needs to be hashed.\n\n**returns:** The hash value of the key.\n\n---\n\n#### HashRing.points(**servers**)\n\nReturns the points per server.\n\n- **servers** Optional server that you want to filter for\n\n**returns:** A Object with server -> Array of points mapping\n\n## Upgrading from 0.0.x to 1.x.x\n\nThe 0.0.x releases had some serious flaws that causes it to be incompatible\nwith the 1.0.0 release. These flaws are the reason that 1.0.0 got released. They\nare not backwards compatible as they change the way that keys are hashed. The\nfollowing incompatible changes have been made for the sake of consistency:\n\n- Only accepts hashers that are build in to node (for now). As it can only\n  guarantee proper hashing of values.\n- The replace function was actually doing swaps of keys, so it\'s original\n  functionality has been renamed to `swap`. The replace API is now removing the\n  given server and adds it again. As this causes the servers to be properly\n  re-hashed.\n- The module now requires a C++ compiler to be installed on your server as\n  hashing the value requires support for 64bit bitshifting and JavaScript as a\n  language only supports 32bit bitshifting.\n- It adds 4 replica\'s instead 3 for the servers. This is how libketama\n  originally did it, if you want to have 3 replica\'s in the hash ring you can\n  set the compatibility option to `hash_ring`.\n- The API\'s have be renamed, deprecation notices are added in to place and they\n  will be removed in the next minor version bump (1.1.0)\n- Added human readable configuration options instead of camelcase. This\n  increases readability of the module.\n- CRC32 was removed as crypto engine because it was to unstable.\n',
235 silly resolved     readmeFilename: 'README.md',
235 silly resolved     _id: 'hashring@3.0.0',
235 silly resolved     _from: 'hashring@3.0.x' },
235 silly resolved   { author:
235 silly resolved      { name: 'Arnout Kazemier',
235 silly resolved        email: 'info@3rd-Eden.com',
235 silly resolved        url: 'http://3rd-Eden.com' },
235 silly resolved     name: 'jackpot',
235 silly resolved     description: 'Jackpot, TCP connection pooling for Node.js',
235 silly resolved     version: '0.0.6',
235 silly resolved     homepage: 'https://github.com/3rd-Eden/jackpot',
235 silly resolved     main: 'index.js',
235 silly resolved     keywords: [ 'pool', 'connection', 'connection pool', 'tcp' ],
235 silly resolved     repository: { type: 'git', url: 'git://github.com/3rd-Eden/jackpot.git' },
235 silly resolved     scripts: { test: 'make test' },
235 silly resolved     dependencies: { retry: '0.6.0' },
235 silly resolved     devDependencies: { mocha: '1.2.1', chai: '1.1.0', 'pre-commit': '0.0.x' },
235 silly resolved     readme: '# whooohoo jackpot\n\n[![build status](https://secure.travis-ci.org/3rd-Eden/jackpot.png?branch=master)](http://travis-ci.org/3rd-Eden/jackpot)\n\nJackpot is a fault tolerant connection pool for Node.js, it automatically cleans\nup after it self and detects broken connections. It does not need to be\nreleased, as it will allocate connections based on their readyState / write\nabilities.\n\n## API\n\n```js\nvar ConnectionPool = require(\'jackpot\');\n\n// First argument: size of the connection pool.\n// Second argument: optional connection factory.\n// Third argument: optional options.\nvar pool = new ConnectionPool(100);\n```\n\nThe following options can be configured:\n\n- `retries` the amount of retries the pull method should do.\n- `factor` exponential backoff factor.\n- `min` minimal delay for the backoff.\n- `max` maximum delay for the backoff.\n- `randomize` randomize the connection.\n\n```js\nvar pool = new ConnectionPool(100, {\n  min: 100\n  max: 50000\n});\n```\n\nBut you can also set the properties:\n\n```js\n// you can optionally boost the amount of retries after you have\n// constructed a new instance\npool.retries = 5 // allow 5 failures for the #pull method\n```\n\nYou can set the required factory at the contructor but also through a helper\nmethod:\n\n```js\n// every connection pool requires a factory which is used to generate / setup\n// the initial net.Connection\n//\n// it should return a new net.Connection instance..\npool.factory(function () {\n  return net.connect(port, host)\n});\n```\n\nThere are 2 ways to retrieve a connection, using `allocate`:\n\n``js`\n// now that the pool is setup we can allocate a connection, the allocate\n// requires a callback as it can be async..\npool.allocate(function (err, connection) {\n  // error: when we failed to get a connection\n  // connection: the allocated net.connection if there isn\'t an error\n});\n```\n\nAnd `pull`;\n\n```js\n// in addition to the #allocate method, there is also the pull method, which is\n// fault tolerant wrapper around the allocate function as it can give back an\n// error if the pool is full, so the pull will then retry to get a new\nconnection.pull(function (err, connection) {\n  // same arguments as the #allocate method\n});\n```\n\nAnd some misc methods:\n\n```js\n// call pool.free if you want to free connections from the pool, the arugment\n// you supply is the amount of connections you want to keep\npool.free(10); // keep only 10 healthy connections kill the rest.\n\n// kill the whole connection pool:\npool.end();\n```\n\nFor more API information, fork this repo and add more.. or look at the test\nfile.\n\n## LICENSE (MIT)\n\nCopyright (c) 2013 Observe.it (http://observe.it) <opensource@observe.it>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the "Software"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions: \n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n',
235 silly resolved     readmeFilename: 'README.md',
235 silly resolved     bugs: { url: 'https://github.com/3rd-Eden/jackpot/issues' },
235 silly resolved     _id: 'jackpot@0.0.6',
235 silly resolved     _from: 'jackpot@>=0.0.6' } ]
236 info install hashring@3.0.0 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
237 info install jackpot@0.0.6 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
238 info installOne hashring@3.0.0
239 info installOne jackpot@0.0.6
240 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring unbuild
241 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot unbuild
242 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\hashring\3.0.0\package.tgz
243 silly lockFile 1495b590--memcached-node-modules-hashring tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
244 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring C:\Users\Shreyas\AppData\Roaming\npm-cache\1495b590--memcached-node-modules-hashring.lock
245 silly lockFile 0af0fd8a-cache-hashring-3-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\hashring\3.0.0\package.tgz
246 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\hashring\3.0.0\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\0af0fd8a-cache-hashring-3-0-0-package-tgz.lock
247 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\jackpot\0.0.6\package.tgz
248 silly lockFile 0d110e93-s-memcached-node-modules-jackpot tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
249 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot C:\Users\Shreyas\AppData\Roaming\npm-cache\0d110e93-s-memcached-node-modules-jackpot.lock
250 silly lockFile 437fadb8--cache-jackpot-0-0-6-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\jackpot\0.0.6\package.tgz
251 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\jackpot\0.0.6\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\437fadb8--cache-jackpot-0-0-6-package-tgz.lock
252 silly gunzTarPerm modes [ '755', '644' ]
253 silly gunzTarPerm modes [ '755', '644' ]
254 silly gunzTarPerm extractEntry package.json
255 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
256 silly gunzTarPerm extractEntry package.json
257 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
258 silly gunzTarPerm extractEntry .npmignore
259 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
260 silly gunzTarPerm extractEntry README.md
261 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
262 silly gunzTarPerm extractEntry .npmignore
263 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
264 silly gunzTarPerm extractEntry README.md
265 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
266 silly gunzTarPerm extractEntry LICENSE
267 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
268 silly gunzTarPerm extractEntry index.js
269 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
270 silly gunzTarPerm extractEntry index.js
271 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
272 silly gunzTarPerm extractEntry ms.js
273 silly gunzTarPerm modified mode [ 'ms.js', 438, 420 ]
274 silly gunzTarPerm extractEntry .travis.yml
275 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
276 silly gunzTarPerm extractEntry CHANGELOG.md
277 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 438, 420 ]
278 silly gunzTarPerm extractEntry Makefile
279 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
280 silly gunzTarPerm extractEntry test/common.js
281 silly gunzTarPerm modified mode [ 'test/common.js', 438, 420 ]
282 silly gunzTarPerm extractEntry test/jackpot.test.js
283 silly gunzTarPerm modified mode [ 'test/jackpot.test.js', 438, 420 ]
284 silly gunzTarPerm extractEntry test/mocha.opts
285 silly gunzTarPerm modified mode [ 'test/mocha.opts', 438, 420 ]
286 silly gunzTarPerm extractEntry doc/index.html
287 silly gunzTarPerm modified mode [ 'doc/index.html', 438, 420 ]
288 silly gunzTarPerm extractEntry .travis.yml
289 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
290 silly gunzTarPerm extractEntry CHANGELOG
291 silly gunzTarPerm modified mode [ 'CHANGELOG', 438, 420 ]
292 silly gunzTarPerm extractEntry Makefile
293 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
294 silly gunzTarPerm extractEntry binding.gyp
295 silly gunzTarPerm modified mode [ 'binding.gyp', 438, 420 ]
296 silly gunzTarPerm extractEntry benchmarks/benchmark.js
297 silly gunzTarPerm modified mode [ 'benchmarks/benchmark.js', 438, 420 ]
298 silly gunzTarPerm extractEntry benchmarks/methods.js
299 silly gunzTarPerm modified mode [ 'benchmarks/methods.js', 438, 420 ]
300 silly gunzTarPerm extractEntry src/hashvalue.cc
301 silly gunzTarPerm modified mode [ 'src/hashvalue.cc', 438, 420 ]
302 silly gunzTarPerm extractEntry src/hashvalue.h
303 silly gunzTarPerm modified mode [ 'src/hashvalue.h', 438, 420 ]
304 silly gunzTarPerm extractEntry tests/api.test.js
305 silly gunzTarPerm modified mode [ 'tests/api.test.js', 438, 420 ]
306 silly gunzTarPerm extractEntry tests/distribution.test.js
307 silly gunzTarPerm modified mode [ 'tests/distribution.test.js', 438, 420 ]
308 silly gunzTarPerm extractEntry tests/fixtures/hash_ring.py
309 silly gunzTarPerm modified mode [ 'tests/fixtures/hash_ring.py', 438, 420 ]
310 silly gunzTarPerm extractEntry tests/fixtures/hash_ring.txt
311 silly gunzTarPerm modified mode [ 'tests/fixtures/hash_ring.txt', 438, 420 ]
312 silly lockFile 0d110e93-s-memcached-node-modules-jackpot tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
313 silly lockFile 0d110e93-s-memcached-node-modules-jackpot tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
314 silly lockFile 437fadb8--cache-jackpot-0-0-6-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\jackpot\0.0.6\package.tgz
315 silly lockFile 437fadb8--cache-jackpot-0-0-6-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\jackpot\0.0.6\package.tgz
316 info preinstall jackpot@0.0.6
317 verbose readDependencies using package.json deps
318 verbose readDependencies using package.json deps
319 verbose cache add [ 'retry@0.6.0', null ]
320 verbose cache add name=undefined spec="retry@0.6.0" args=["retry@0.6.0",null]
321 verbose parsed url { protocol: null,
321 verbose parsed url   slashes: null,
321 verbose parsed url   auth: null,
321 verbose parsed url   host: null,
321 verbose parsed url   port: null,
321 verbose parsed url   hostname: null,
321 verbose parsed url   hash: null,
321 verbose parsed url   search: null,
321 verbose parsed url   query: null,
321 verbose parsed url   pathname: 'retry@0.6.0',
321 verbose parsed url   path: 'retry@0.6.0',
321 verbose parsed url   href: 'retry@0.6.0' }
322 verbose cache add name="retry" spec="0.6.0" args=["retry","0.6.0"]
323 verbose parsed url { protocol: null,
323 verbose parsed url   slashes: null,
323 verbose parsed url   auth: null,
323 verbose parsed url   host: null,
323 verbose parsed url   port: null,
323 verbose parsed url   hostname: null,
323 verbose parsed url   hash: null,
323 verbose parsed url   search: null,
323 verbose parsed url   query: null,
323 verbose parsed url   pathname: '0.6.0',
323 verbose parsed url   path: '0.6.0',
323 verbose parsed url   href: '0.6.0' }
324 verbose addNamed [ 'retry', '0.6.0' ]
325 verbose addNamed [ '0.6.0', '0.6.0' ]
326 silly lockFile 874cb068-retry-0-6-0 retry@0.6.0
327 verbose lock retry@0.6.0 C:\Users\Shreyas\AppData\Roaming\npm-cache\874cb068-retry-0-6-0.lock
328 verbose url raw retry/0.6.0
329 verbose url resolving [ 'https://registry.npmjs.org/', './retry/0.6.0' ]
330 verbose url resolved https://registry.npmjs.org/retry/0.6.0
331 info trying registry request attempt 1 at 18:31:55
332 verbose etag "3FAQCUIFN6P77ON3O711EN89E"
333 http GET https://registry.npmjs.org/retry/0.6.0
334 silly gunzTarPerm extractEntry tests/fixtures/ketama.py
335 silly gunzTarPerm modified mode [ 'tests/fixtures/ketama.py', 438, 420 ]
336 silly gunzTarPerm extractEntry tests/fixtures/ketama.txt
337 silly gunzTarPerm modified mode [ 'tests/fixtures/ketama.txt', 438, 420 ]
338 http 304 https://registry.npmjs.org/retry/0.6.0
339 silly registry.get cb [ 304,
339 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:57 GMT',
339 silly registry.get     server: 'Apache',
339 silly registry.get     via: '1.1 varnish',
339 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:57 GMT',
339 silly registry.get     'cache-control': 'max-age=60',
339 silly registry.get     etag: '"3FAQCUIFN6P77ON3O711EN89E"',
339 silly registry.get     age: '0',
339 silly registry.get     'x-served-by': 'cache-dfw1832-DFW',
339 silly registry.get     'x-cache': 'HIT',
339 silly registry.get     'x-cache-hits': '1',
339 silly registry.get     'x-timer': 'S1417998717.095952,VS0,VE48',
339 silly registry.get     vary: 'Accept',
339 silly registry.get     'content-length': '0',
339 silly registry.get     'keep-alive': 'timeout=10, max=50',
339 silly registry.get     connection: 'Keep-Alive' } ]
340 verbose etag retry/0.6.0 from cache
341 silly lockFile 874cb068-retry-0-6-0 retry@0.6.0
342 silly lockFile 874cb068-retry-0-6-0 retry@0.6.0
343 silly resolved [ { author:
343 silly resolved      { name: 'Tim Koschützki',
343 silly resolved        email: 'tim@debuggable.com',
343 silly resolved        url: 'http://debuggable.com/' },
343 silly resolved     name: 'retry',
343 silly resolved     description: 'Abstraction for exponential and custom retry strategies for failed operations.',
343 silly resolved     version: '0.6.0',
343 silly resolved     homepage: 'https://github.com/tim-kos/node-retry',
343 silly resolved     repository: { type: 'git', url: 'git://github.com/felixge/node-retry.git' },
343 silly resolved     directories: { lib: './lib' },
343 silly resolved     main: 'index',
343 silly resolved     engines: { node: '*' },
343 silly resolved     dependencies: {},
343 silly resolved     devDependencies: { fake: '0.2.0', far: '0.0.1' },
343 silly resolved     readme: '# retry\n\nAbstraction for exponential and custom retry strategies for failed operations.\n\n## Installation\n\n    npm install retry\n\n## Current Status\n\nThis module has been tested and is ready to be used.\n\n## Tutorial\n\nThe example below will retry a potentially failing `dns.resolve` operation\n`10` times using an exponential backoff strategy. With the default settings, this\nmeans the last attempt is made after `34 minutes and 7 seconds`.\n\n``` javascript\nvar dns = require(\'dns\');\nvar retry = require(\'retry\');\n\nfunction faultTolerantResolve(address, cb) {\n  var operation = retry.operation();\n\n  operation.attempt(function(currentAttempt) {\n    dns.resolve(address, function(err, addresses) {\n      if (operation.retry(err)) {\n        return;\n      }\n\n      cb(operation.mainError(), addresses);\n    });\n  });\n}\n\nfaultTolerantResolve(\'nodejs.org\', function(err, addresses) {\n  console.log(err, addresses);\n});\n```\n\nOf course you can also configure the factors that go into the exponential\nbackoff. See the API documentation below for all available settings.\ncurrentAttempt is an int representing the number of attempts so far.\n\n``` javascript\nvar operation = retry.operation({\n  retries: 5,\n  factor: 3,\n  minTimeout: 1 * 1000,\n  maxTimeout: 60 * 1000,\n  randomize: true,\n});\n```\n\n## API\n\n### retry.operation([options])\n\nCreates a new `RetryOperation` object. See the `retry.timeouts()` function\nbelow for available `options`.\n\n### retry.timeouts([options])\n\nReturns an array of timeouts. All time `options` and return values are in\nmilliseconds. If `options` is an array, a copy of that array is returned.\n\n`options` is a JS object that can contain any of the following keys:\n\n* `retries`: The maximum amount of times to retry the operation. Default is `10`.\n* `factor`: The exponential factor to use. Default is `2`.\n* `minTimeout`: The amount of time before starting the first retry. Default is `1000`.\n* `maxTimeout`: The maximum amount of time between two retries. Default is `Infinity`.\n* `randomize`: Randomizes the timeouts by multiplying with a factor between `1` to `2`. Default is `false`.\n\nThe formula used to calculate the individual timeouts is:\n\n```\nvar Math.min(random * minTimeout * Math.pow(factor, attempt), maxTimeout);\n```\n\nHave a look at [this article][article] for a better explanation of approach.\n\nIf you want to tune your `factor` / `times` settings to attempt the last retry\nafter a certain amount of time, you can use wolfram alpha. For example in order\nto tune for `10` attempts in `5 minutes`, you can use this equation:\n\n![screenshot](https://github.com/tim-kos/node-retry/raw/master/equation.gif)\n\nExplaining the various values from left to right:\n\n* `k = 0 ... 9`:  The `retries` value (10)\n* `1000`: The `minTimeout` value in ms (1000)\n* `x^k`: No need to change this, `x` will be your resulting factor\n* `5 * 60 * 1000`: The desired total amount of time for retrying in ms (5 minutes)\n\nTo make this a little easier for you, use wolfram alpha to do the calculations:\n\n[http://www.wolframalpha.com/input/?i=Sum%5B1000*x^k%2C+{k%2C+0%2C+9}%5D+%3D+5+*+60+*+1000]()\n\n[article]: http://dthain.blogspot.com/2009/02/exponential-backoff-in-distributed.html\n\n### new RetryOperation(timeouts)\n\nCreates a new `RetryOperation` where `timeouts` is an array where each value is\na timeout given in milliseconds.\n\n#### retryOperation.errors()\n\nReturns an array of all errors that have been passed to\n`retryOperation.retry()` so far.\n\n#### retryOperation.mainError()\n\nA reference to the error object that occured most frequently. Errors are\ncompared using the `error.message` property.\n\nIf multiple error messages occured the same amount of time, the last error\nobject with that message is returned.\n\nIf no errors occured so far, the value is `null`.\n\n#### retryOperation.attempt(fn, timeoutOps)\n\nDefines the function `fn` that is to be retried and executes it for the first\ntime right away. The `fn` function can receive an optional `currentAttempt` callback that represents the number of attempts to execute `fn` so far.\n\nOptionally defines `timeoutOps` which is an object having a property `timeout` in miliseconds and a property `cb` callback function.\nWhenever your retry operation takes longer than `timeout` to execute, the timeout callback function `cb` is called.\n\n\n#### retryOperation.try(fn)\n\nThis is an alias for `retryOperation.attempt(fn)`. This is deprecated.\n\n#### retryOperation.start(fn)\n\nThis is an alias for `retryOperation.attempt(fn)`. This is deprecated.\n\n#### retryOperation.retry(error)\n\nReturns `false` when no `error` value is given, or the maximum amount of retries\nhas been reached.\n\nOtherwise it returns `true`, and retries the operation after the timeout for\nthe current attempt number.\n\n#### retryOperation.attempts()\n\nReturns an int representing the number of attempts it took to call `fn` before it was successful.\n\n## License\n\nretry is licensed under the MIT license.\n\n\n#Changelog\n\n0.6.0 Introduced optional timeOps parameter for the attempt() function which is an object having a property timeout in miliseconds and a property cb callback function. Whenever your retry operation takes longer than timeout to execute, the timeout callback function cb is called.\n\n0.5.0 Some minor refactorings.\n\n0.4.0 Changed retryOperation.try() to retryOperation.attempt(). Deprecated the aliases start() and try() for it.\n\n0.3.0 Added retryOperation.start() which is an alias for retryOperation.try().\n\n0.2.0 Added attempts() function and parameter to retryOperation.try() representing the number of attempts it took to call fn().\n',
343 silly resolved     readmeFilename: 'Readme.md',
343 silly resolved     bugs: { url: 'https://github.com/felixge/node-retry/issues' },
343 silly resolved     _id: 'retry@0.6.0',
343 silly resolved     _from: 'retry@0.6.0' } ]
344 info install retry@0.6.0 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
345 info installOne retry@0.6.0
346 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry unbuild
347 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\retry\0.6.0\package.tgz
348 silly lockFile 5a8b91f6-dules-jackpot-node-modules-retry tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry
349 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry C:\Users\Shreyas\AppData\Roaming\npm-cache\5a8b91f6-dules-jackpot-node-modules-retry.lock
350 silly lockFile 918b6844-pm-cache-retry-0-6-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\retry\0.6.0\package.tgz
351 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\retry\0.6.0\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\918b6844-pm-cache-retry-0-6-0-package-tgz.lock
352 silly gunzTarPerm modes [ '755', '644' ]
353 silly gunzTarPerm extractEntry tests/fixtures/libmemcached.json
354 silly gunzTarPerm modified mode [ 'tests/fixtures/libmemcached.json', 438, 420 ]
355 silly gunzTarPerm extractEntry package.json
356 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
357 silly gunzTarPerm extractEntry .npmignore
358 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
359 silly gunzTarPerm extractEntry index.js
360 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
361 silly gunzTarPerm extractEntry equation.gif
362 silly gunzTarPerm modified mode [ 'equation.gif', 438, 420 ]
363 silly gunzTarPerm extractEntry example/dns.js
364 silly gunzTarPerm modified mode [ 'example/dns.js', 438, 420 ]
365 silly gunzTarPerm extractEntry lib/retry.js
366 silly gunzTarPerm modified mode [ 'lib/retry.js', 438, 420 ]
367 silly gunzTarPerm extractEntry lib/retry_operation.js
368 silly gunzTarPerm modified mode [ 'lib/retry_operation.js', 438, 420 ]
369 silly gunzTarPerm extractEntry License
370 silly gunzTarPerm modified mode [ 'License', 438, 420 ]
371 silly gunzTarPerm extractEntry Makefile
372 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
373 silly gunzTarPerm extractEntry Readme.md
374 silly gunzTarPerm modified mode [ 'Readme.md', 438, 420 ]
375 silly gunzTarPerm extractEntry test/common.js
376 silly gunzTarPerm modified mode [ 'test/common.js', 438, 420 ]
377 silly gunzTarPerm extractEntry test/runner.js
378 silly gunzTarPerm modified mode [ 'test/runner.js', 438, 420 ]
379 silly gunzTarPerm extractEntry test/integration/test-retry-operation.js
380 silly gunzTarPerm modified mode [ 'test/integration/test-retry-operation.js', 438, 420 ]
381 silly gunzTarPerm extractEntry test/integration/test-timeouts.js
382 silly gunzTarPerm modified mode [ 'test/integration/test-timeouts.js', 438, 420 ]
383 silly lockFile 5a8b91f6-dules-jackpot-node-modules-retry tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry
384 silly lockFile 5a8b91f6-dules-jackpot-node-modules-retry tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry
385 silly lockFile 918b6844-pm-cache-retry-0-6-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\retry\0.6.0\package.tgz
386 silly lockFile 918b6844-pm-cache-retry-0-6-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\retry\0.6.0\package.tgz
387 info preinstall retry@0.6.0
388 verbose readDependencies using package.json deps
389 verbose readDependencies using package.json deps
390 silly resolved []
391 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry
392 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot\node_modules\retry
393 verbose linkStuff [ true,
393 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
393 verbose linkStuff   false,
393 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules\\jackpot\\node_modules' ]
394 info linkStuff retry@0.6.0
395 verbose linkBins retry@0.6.0
396 verbose linkMans retry@0.6.0
397 verbose rebuildBundles retry@0.6.0
398 info install retry@0.6.0
399 info postinstall retry@0.6.0
400 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
401 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\jackpot
402 verbose linkStuff [ true,
402 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
402 verbose linkStuff   false,
402 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules' ]
403 info linkStuff jackpot@0.0.6
404 verbose linkBins jackpot@0.0.6
405 verbose linkMans jackpot@0.0.6
406 verbose rebuildBundles jackpot@0.0.6
407 verbose rebuildBundles [ 'retry' ]
408 info install jackpot@0.0.6
409 info postinstall jackpot@0.0.6
410 silly gunzTarPerm extractEntry tests/fixtures/pylibmc.txt
411 silly gunzTarPerm modified mode [ 'tests/fixtures/pylibmc.txt', 438, 420 ]
412 silly gunzTarPerm extractEntry tests/fixtures/test_pylibmc.py
413 silly gunzTarPerm modified mode [ 'tests/fixtures/test_pylibmc.py', 438, 420 ]
414 silly lockFile 1495b590--memcached-node-modules-hashring tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
415 silly lockFile 1495b590--memcached-node-modules-hashring tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
416 silly lockFile 0af0fd8a-cache-hashring-3-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\hashring\3.0.0\package.tgz
417 silly lockFile 0af0fd8a-cache-hashring-3-0-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\hashring\3.0.0\package.tgz
418 info preinstall hashring@3.0.0
419 verbose readDependencies using package.json deps
420 verbose readDependencies using package.json deps
421 verbose cache add [ 'bindings@1.2.x', null ]
422 verbose cache add name=undefined spec="bindings@1.2.x" args=["bindings@1.2.x",null]
423 verbose parsed url { protocol: null,
423 verbose parsed url   slashes: null,
423 verbose parsed url   auth: null,
423 verbose parsed url   host: null,
423 verbose parsed url   port: null,
423 verbose parsed url   hostname: null,
423 verbose parsed url   hash: null,
423 verbose parsed url   search: null,
423 verbose parsed url   query: null,
423 verbose parsed url   pathname: 'bindings@1.2.x',
423 verbose parsed url   path: 'bindings@1.2.x',
423 verbose parsed url   href: 'bindings@1.2.x' }
424 verbose cache add name="bindings" spec="1.2.x" args=["bindings","1.2.x"]
425 verbose parsed url { protocol: null,
425 verbose parsed url   slashes: null,
425 verbose parsed url   auth: null,
425 verbose parsed url   host: null,
425 verbose parsed url   port: null,
425 verbose parsed url   hostname: null,
425 verbose parsed url   hash: null,
425 verbose parsed url   search: null,
425 verbose parsed url   query: null,
425 verbose parsed url   pathname: '1.2.x',
425 verbose parsed url   path: '1.2.x',
425 verbose parsed url   href: '1.2.x' }
426 verbose addNamed [ 'bindings', '1.2.x' ]
427 verbose addNamed [ null, '>=1.2.0-0 <1.3.0-0' ]
428 silly lockFile 9e58a7b0-bindings-1-2-x bindings@1.2.x
429 verbose lock bindings@1.2.x C:\Users\Shreyas\AppData\Roaming\npm-cache\9e58a7b0-bindings-1-2-x.lock
430 verbose cache add [ 'connection-parse@0.0.x', null ]
431 verbose cache add name=undefined spec="connection-parse@0.0.x" args=["connection-parse@0.0.x",null]
432 verbose parsed url { protocol: null,
432 verbose parsed url   slashes: null,
432 verbose parsed url   auth: null,
432 verbose parsed url   host: null,
432 verbose parsed url   port: null,
432 verbose parsed url   hostname: null,
432 verbose parsed url   hash: null,
432 verbose parsed url   search: null,
432 verbose parsed url   query: null,
432 verbose parsed url   pathname: 'connection-parse@0.0.x',
432 verbose parsed url   path: 'connection-parse@0.0.x',
432 verbose parsed url   href: 'connection-parse@0.0.x' }
433 verbose cache add name="connection-parse" spec="0.0.x" args=["connection-parse","0.0.x"]
434 verbose parsed url { protocol: null,
434 verbose parsed url   slashes: null,
434 verbose parsed url   auth: null,
434 verbose parsed url   host: null,
434 verbose parsed url   port: null,
434 verbose parsed url   hostname: null,
434 verbose parsed url   hash: null,
434 verbose parsed url   search: null,
434 verbose parsed url   query: null,
434 verbose parsed url   pathname: '0.0.x',
434 verbose parsed url   path: '0.0.x',
434 verbose parsed url   href: '0.0.x' }
435 verbose addNamed [ 'connection-parse', '0.0.x' ]
436 verbose addNamed [ null, '>=0.0.0-0 <0.1.0-0' ]
437 silly lockFile a260e9f5-connection-parse-0-0-x connection-parse@0.0.x
438 verbose lock connection-parse@0.0.x C:\Users\Shreyas\AppData\Roaming\npm-cache\a260e9f5-connection-parse-0-0-x.lock
439 verbose cache add [ 'nan@1.3.x', null ]
440 verbose cache add name=undefined spec="nan@1.3.x" args=["nan@1.3.x",null]
441 verbose parsed url { protocol: null,
441 verbose parsed url   slashes: null,
441 verbose parsed url   auth: null,
441 verbose parsed url   host: null,
441 verbose parsed url   port: null,
441 verbose parsed url   hostname: null,
441 verbose parsed url   hash: null,
441 verbose parsed url   search: null,
441 verbose parsed url   query: null,
441 verbose parsed url   pathname: 'nan@1.3.x',
441 verbose parsed url   path: 'nan@1.3.x',
441 verbose parsed url   href: 'nan@1.3.x' }
442 verbose cache add name="nan" spec="1.3.x" args=["nan","1.3.x"]
443 verbose parsed url { protocol: null,
443 verbose parsed url   slashes: null,
443 verbose parsed url   auth: null,
443 verbose parsed url   host: null,
443 verbose parsed url   port: null,
443 verbose parsed url   hostname: null,
443 verbose parsed url   hash: null,
443 verbose parsed url   search: null,
443 verbose parsed url   query: null,
443 verbose parsed url   pathname: '1.3.x',
443 verbose parsed url   path: '1.3.x',
443 verbose parsed url   href: '1.3.x' }
444 verbose addNamed [ 'nan', '1.3.x' ]
445 verbose addNamed [ null, '>=1.3.0-0 <1.4.0-0' ]
446 silly lockFile 0654938e-nan-1-3-x nan@1.3.x
447 verbose lock nan@1.3.x C:\Users\Shreyas\AppData\Roaming\npm-cache\0654938e-nan-1-3-x.lock
448 verbose cache add [ 'simple-lru-cache@0.0.x', null ]
449 verbose cache add name=undefined spec="simple-lru-cache@0.0.x" args=["simple-lru-cache@0.0.x",null]
450 verbose parsed url { protocol: null,
450 verbose parsed url   slashes: null,
450 verbose parsed url   auth: null,
450 verbose parsed url   host: null,
450 verbose parsed url   port: null,
450 verbose parsed url   hostname: null,
450 verbose parsed url   hash: null,
450 verbose parsed url   search: null,
450 verbose parsed url   query: null,
450 verbose parsed url   pathname: 'simple-lru-cache@0.0.x',
450 verbose parsed url   path: 'simple-lru-cache@0.0.x',
450 verbose parsed url   href: 'simple-lru-cache@0.0.x' }
451 verbose cache add name="simple-lru-cache" spec="0.0.x" args=["simple-lru-cache","0.0.x"]
452 verbose parsed url { protocol: null,
452 verbose parsed url   slashes: null,
452 verbose parsed url   auth: null,
452 verbose parsed url   host: null,
452 verbose parsed url   port: null,
452 verbose parsed url   hostname: null,
452 verbose parsed url   hash: null,
452 verbose parsed url   search: null,
452 verbose parsed url   query: null,
452 verbose parsed url   pathname: '0.0.x',
452 verbose parsed url   path: '0.0.x',
452 verbose parsed url   href: '0.0.x' }
453 verbose addNamed [ 'simple-lru-cache', '0.0.x' ]
454 verbose addNamed [ null, '>=0.0.0-0 <0.1.0-0' ]
455 silly lockFile 89b9fea9-simple-lru-cache-0-0-x simple-lru-cache@0.0.x
456 verbose lock simple-lru-cache@0.0.x C:\Users\Shreyas\AppData\Roaming\npm-cache\89b9fea9-simple-lru-cache-0-0-x.lock
457 silly addNameRange { name: 'nan', range: '>=1.3.0-0 <1.4.0-0', hasData: false }
458 silly addNameRange { name: 'connection-parse',
458 silly addNameRange   range: '>=0.0.0-0 <0.1.0-0',
458 silly addNameRange   hasData: false }
459 silly addNameRange { name: 'bindings', range: '>=1.2.0-0 <1.3.0-0', hasData: false }
460 silly addNameRange { name: 'simple-lru-cache',
460 silly addNameRange   range: '>=0.0.0-0 <0.1.0-0',
460 silly addNameRange   hasData: false }
461 verbose url raw nan
462 verbose url resolving [ 'https://registry.npmjs.org/', './nan' ]
463 verbose url resolved https://registry.npmjs.org/nan
464 info trying registry request attempt 1 at 18:31:57
465 verbose etag "BASL4AHUZL2X9BYWJN23MGK84"
466 http GET https://registry.npmjs.org/nan
467 verbose url raw connection-parse
468 verbose url resolving [ 'https://registry.npmjs.org/', './connection-parse' ]
469 verbose url resolved https://registry.npmjs.org/connection-parse
470 info trying registry request attempt 1 at 18:31:57
471 verbose etag "EG06ZKJUKR0AJ18OFB50KYTUT"
472 http GET https://registry.npmjs.org/connection-parse
473 verbose url raw bindings
474 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
475 verbose url resolved https://registry.npmjs.org/bindings
476 info trying registry request attempt 1 at 18:31:57
477 verbose etag "6SJRISMK25A1UDWM33HHCDB3Q"
478 http GET https://registry.npmjs.org/bindings
479 verbose url raw simple-lru-cache
480 verbose url resolving [ 'https://registry.npmjs.org/', './simple-lru-cache' ]
481 verbose url resolved https://registry.npmjs.org/simple-lru-cache
482 info trying registry request attempt 1 at 18:31:57
483 verbose etag "50WHA56NXISE3QTWR783KBD3N"
484 http GET https://registry.npmjs.org/simple-lru-cache
485 http 304 https://registry.npmjs.org/bindings
486 silly registry.get cb [ 304,
486 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:58 GMT',
486 silly registry.get     server: 'Apache',
486 silly registry.get     via: '1.1 varnish',
486 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:58 GMT',
486 silly registry.get     'cache-control': 'max-age=60',
486 silly registry.get     etag: '"6SJRISMK25A1UDWM33HHCDB3Q"',
486 silly registry.get     age: '1',
486 silly registry.get     'x-served-by': 'cache-dfw1823-DFW',
486 silly registry.get     'x-cache': 'HIT',
486 silly registry.get     'x-cache-hits': '1',
486 silly registry.get     'x-timer': 'S1417998718.963866,VS0,VE0',
486 silly registry.get     vary: 'Accept',
486 silly registry.get     'content-length': '0',
486 silly registry.get     'keep-alive': 'timeout=10, max=50',
486 silly registry.get     connection: 'Keep-Alive' } ]
487 verbose etag bindings from cache
488 silly addNameRange number 2 { name: 'bindings', range: '>=1.2.0-0 <1.3.0-0', hasData: true }
489 silly addNameRange versions [ 'bindings',
489 silly addNameRange   [ '0.0.1',
489 silly addNameRange     '0.1.0',
489 silly addNameRange     '0.1.1',
489 silly addNameRange     '0.2.0',
489 silly addNameRange     '0.2.1',
489 silly addNameRange     '0.2.2',
489 silly addNameRange     '0.2.3',
489 silly addNameRange     '0.2.4',
489 silly addNameRange     '0.3.0',
489 silly addNameRange     '0.4.0',
489 silly addNameRange     '1.0.0',
489 silly addNameRange     '1.1.0',
489 silly addNameRange     '1.1.1',
489 silly addNameRange     '1.2.0',
489 silly addNameRange     '1.2.1' ] ]
490 verbose addNamed [ 'bindings', '1.2.1' ]
491 verbose addNamed [ '1.2.1', '1.2.1' ]
492 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
493 verbose lock bindings@1.2.1 C:\Users\Shreyas\AppData\Roaming\npm-cache\e9060511-bindings-1-2-1.lock
494 http 304 https://registry.npmjs.org/connection-parse
495 silly registry.get cb [ 304,
495 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:58 GMT',
495 silly registry.get     server: 'Apache',
495 silly registry.get     via: '1.1 varnish',
495 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:58 GMT',
495 silly registry.get     'cache-control': 'max-age=60',
495 silly registry.get     etag: '"EG06ZKJUKR0AJ18OFB50KYTUT"',
495 silly registry.get     age: '0',
495 silly registry.get     'x-served-by': 'cache-dfw1821-DFW',
495 silly registry.get     'x-cache': 'HIT',
495 silly registry.get     'x-cache-hits': '1',
495 silly registry.get     'x-timer': 'S1417998718.958522,VS0,VE40',
495 silly registry.get     vary: 'Accept',
495 silly registry.get     'content-length': '0',
495 silly registry.get     'keep-alive': 'timeout=10, max=50',
495 silly registry.get     connection: 'Keep-Alive' } ]
496 verbose etag connection-parse from cache
497 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
498 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
499 silly lockFile 9e58a7b0-bindings-1-2-x bindings@1.2.x
500 silly lockFile 9e58a7b0-bindings-1-2-x bindings@1.2.x
501 silly addNameRange number 2 { name: 'connection-parse',
501 silly addNameRange   range: '>=0.0.0-0 <0.1.0-0',
501 silly addNameRange   hasData: true }
502 silly addNameRange versions [ 'connection-parse',
502 silly addNameRange   [ '0.0.0',
502 silly addNameRange     '0.0.1',
502 silly addNameRange     '0.0.2',
502 silly addNameRange     '0.0.3',
502 silly addNameRange     '0.0.4',
502 silly addNameRange     '0.0.5',
502 silly addNameRange     '0.0.6',
502 silly addNameRange     '0.0.7' ] ]
503 verbose addNamed [ 'connection-parse', '0.0.7' ]
504 verbose addNamed [ '0.0.7', '0.0.7' ]
505 silly lockFile 1381f58f-connection-parse-0-0-7 connection-parse@0.0.7
506 verbose lock connection-parse@0.0.7 C:\Users\Shreyas\AppData\Roaming\npm-cache\1381f58f-connection-parse-0-0-7.lock
507 silly lockFile 1381f58f-connection-parse-0-0-7 connection-parse@0.0.7
508 silly lockFile 1381f58f-connection-parse-0-0-7 connection-parse@0.0.7
509 silly lockFile a260e9f5-connection-parse-0-0-x connection-parse@0.0.x
510 silly lockFile a260e9f5-connection-parse-0-0-x connection-parse@0.0.x
511 http 304 https://registry.npmjs.org/nan
512 silly registry.get cb [ 304,
512 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:58 GMT',
512 silly registry.get     server: 'Apache',
512 silly registry.get     via: '1.1 varnish',
512 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:59 GMT',
512 silly registry.get     'cache-control': 'max-age=60',
512 silly registry.get     etag: '"BASL4AHUZL2X9BYWJN23MGK84"',
512 silly registry.get     age: '0',
512 silly registry.get     'x-served-by': 'cache-dfw1827-DFW',
512 silly registry.get     'x-cache': 'HIT',
512 silly registry.get     'x-cache-hits': '1',
512 silly registry.get     'x-timer': 'S1417998718.958632,VS0,VE252',
512 silly registry.get     vary: 'Accept',
512 silly registry.get     'content-length': '0',
512 silly registry.get     'keep-alive': 'timeout=10, max=50',
512 silly registry.get     connection: 'Keep-Alive' } ]
513 verbose etag nan from cache
514 http 304 https://registry.npmjs.org/simple-lru-cache
515 silly registry.get cb [ 304,
515 silly registry.get   { date: 'Mon, 08 Dec 2014 00:31:58 GMT',
515 silly registry.get     server: 'Apache',
515 silly registry.get     via: '1.1 varnish',
515 silly registry.get     'last-modified': 'Mon, 08 Dec 2014 00:31:59 GMT',
515 silly registry.get     'cache-control': 'max-age=60',
515 silly registry.get     etag: '"50WHA56NXISE3QTWR783KBD3N"',
515 silly registry.get     age: '0',
515 silly registry.get     'x-served-by': 'cache-dfw1835-DFW',
515 silly registry.get     'x-cache': 'HIT',
515 silly registry.get     'x-cache-hits': '1',
515 silly registry.get     'x-timer': 'S1417998718.989359,VS0,VE263',
515 silly registry.get     vary: 'Accept',
515 silly registry.get     'content-length': '0',
515 silly registry.get     'keep-alive': 'timeout=10, max=50',
515 silly registry.get     connection: 'Keep-Alive' } ]
516 verbose etag simple-lru-cache from cache
517 silly addNameRange number 2 { name: 'nan', range: '>=1.3.0-0 <1.4.0-0', hasData: true }
518 silly addNameRange versions [ 'nan',
518 silly addNameRange   [ '0.3.0-wip',
518 silly addNameRange     '0.3.0-wip2',
518 silly addNameRange     '0.3.0',
518 silly addNameRange     '0.3.1',
518 silly addNameRange     '0.3.2',
518 silly addNameRange     '0.4.0',
518 silly addNameRange     '0.4.1',
518 silly addNameRange     '0.4.2',
518 silly addNameRange     '0.4.3',
518 silly addNameRange     '0.4.4',
518 silly addNameRange     '0.5.0',
518 silly addNameRange     '0.5.1',
518 silly addNameRange     '0.5.2',
518 silly addNameRange     '0.6.0',
518 silly addNameRange     '0.7.0',
518 silly addNameRange     '0.7.1',
518 silly addNameRange     '0.8.0',
518 silly addNameRange     '1.0.0',
518 silly addNameRange     '1.1.0',
518 silly addNameRange     '1.1.1',
518 silly addNameRange     '1.1.2',
518 silly addNameRange     '1.2.0',
518 silly addNameRange     '1.3.0',
518 silly addNameRange     '1.4.0',
518 silly addNameRange     '1.4.1' ] ]
519 verbose addNamed [ 'nan', '1.3.0' ]
520 verbose addNamed [ '1.3.0', '1.3.0' ]
521 silly lockFile b8539500-nan-1-3-0 nan@1.3.0
522 verbose lock nan@1.3.0 C:\Users\Shreyas\AppData\Roaming\npm-cache\b8539500-nan-1-3-0.lock
523 silly lockFile b8539500-nan-1-3-0 nan@1.3.0
524 silly lockFile b8539500-nan-1-3-0 nan@1.3.0
525 silly lockFile 0654938e-nan-1-3-x nan@1.3.x
526 silly lockFile 0654938e-nan-1-3-x nan@1.3.x
527 silly addNameRange number 2 { name: 'simple-lru-cache',
527 silly addNameRange   range: '>=0.0.0-0 <0.1.0-0',
527 silly addNameRange   hasData: true }
528 silly addNameRange versions [ 'simple-lru-cache', [ '0.0.1' ] ]
529 verbose addNamed [ 'simple-lru-cache', '0.0.1' ]
530 verbose addNamed [ '0.0.1', '0.0.1' ]
531 silly lockFile f2d731d6-simple-lru-cache-0-0-1 simple-lru-cache@0.0.1
532 verbose lock simple-lru-cache@0.0.1 C:\Users\Shreyas\AppData\Roaming\npm-cache\f2d731d6-simple-lru-cache-0-0-1.lock
533 silly lockFile f2d731d6-simple-lru-cache-0-0-1 simple-lru-cache@0.0.1
534 silly lockFile f2d731d6-simple-lru-cache-0-0-1 simple-lru-cache@0.0.1
535 silly lockFile 89b9fea9-simple-lru-cache-0-0-x simple-lru-cache@0.0.x
536 silly lockFile 89b9fea9-simple-lru-cache-0-0-x simple-lru-cache@0.0.x
537 silly resolved [ { name: 'bindings',
537 silly resolved     description: 'Helper module for loading your native module\'s .node file',
537 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
537 silly resolved     version: '1.2.1',
537 silly resolved     author:
537 silly resolved      { name: 'Nathan Rajlich',
537 silly resolved        email: 'nathan@tootallnate.net',
537 silly resolved        url: 'http://tootallnate.net' },
537 silly resolved     repository:
537 silly resolved      { type: 'git',
537 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
537 silly resolved     main: './bindings.js',
537 silly resolved     bugs: { url: 'https://github.com/TooTallNate/node-bindings/issues' },
537 silly resolved     homepage: 'https://github.com/TooTallNate/node-bindings',
537 silly resolved     license: 'MIT',
537 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
537 silly resolved     readmeFilename: 'README.md',
537 silly resolved     _id: 'bindings@1.2.1',
537 silly resolved     _from: 'bindings@1.2.x' },
537 silly resolved   { name: 'connection-parse',
537 silly resolved     version: '0.0.7',
537 silly resolved     description: 'Simple TCP connection string parser',
537 silly resolved     main: 'index.js',
537 silly resolved     scripts: { test: './node_modules/.bin/mocha $(shell find test -name \'*.test.js\')' },
537 silly resolved     repository:
537 silly resolved      { type: 'git',
537 silly resolved        url: 'git://github.com/3rd-Eden/connection-parse.git' },
537 silly resolved     keywords: [ 'TCP', 'connection', 'parser', 'connection-string' ],
537 silly resolved     author: { name: 'Arnout Kazemier' },
537 silly resolved     license: 'MIT',
537 silly resolved     devDependencies: { mocha: '1.8.x', chai: '1.4.x' },
537 silly resolved     readme: '# connection-parse\n\nSimple TCP connection string parser, and nothing more then that. It simply\ntransforms `1.1.1.1:1111` in to a simple parsed object. I seem to do this a lot\nin most of my modules such as hashring, memcached and failover. So it makes\nsense to extract this in to a small util.\n\n## Installation\n\nInstall this module using `npm`:\n\n```\nnpm install connection-parse --save\n```\n\nThe `--save` automatically adds the package and version to your `package.json`.\n\n## API\n\n```js\nvar parse = require(\'connection-parse\');\n\nparse(\'1.1.1.1:1111\')\nparse(\'1.1.1.1:1111\', \'1.3.3.4:1345\');\nparse([\'1.1.1.1:1111\', \'1.3.3.4:1345\']);\nparse({ \'1.1.1.1:1111\': 100 });\n\n{\n  servers: [{\n    string: \'1.1.1.1:1111\',\n    host: \'1.1.1.1\',\n    port: 1111\n  }],\n  regular: [\'1.1.1.1:1111\'],\n  weighted: {\n    \'1.1.1.1:1111\': 100 // or 1 by default\n  }\n}\n\n// It also accepts custom parsers\nparse.merge(function (data) {\n  data.foo = \'bar\';\n  return data;\n});\n\nThen the server instances will also have an extra property, `foo`.\n```\n\n## License\n\nMIT\n',
537 silly resolved     readmeFilename: 'README.md',
537 silly resolved     bugs: { url: 'https://github.com/3rd-Eden/connection-parse/issues' },
537 silly resolved     homepage: 'https://github.com/3rd-Eden/connection-parse',
537 silly resolved     _id: 'connection-parse@0.0.7',
537 silly resolved     _from: 'connection-parse@0.0.x' },
537 silly resolved   { name: 'nan',
537 silly resolved     version: '1.3.0',
537 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
537 silly resolved     main: 'include_dirs.js',
537 silly resolved     repository: { type: 'git', url: 'git://github.com/rvagg/nan.git' },
537 silly resolved     scripts:
537 silly resolved      { test: 'tap --gc test/js/*-test.js',
537 silly resolved        'rebuild-tests': 'node-gyp rebuild --directory test' },
537 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
537 silly resolved     devDependencies:
537 silly resolved      { bindings: '~1.2.1',
537 silly resolved        'node-gyp': '~1.0.1',
537 silly resolved        tap: '~0.4.12',
537 silly resolved        xtend: '~4.0.0' },
537 silly resolved     license: 'MIT',
537 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**\n\n***Current version: 1.3.0***\n\n*(See [nan.h](https://github.com/rvagg/nan/blob/master/CHANGELOG.md) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6)](https://nodei.co/npm/nan/)\n\n[![Build Status](https://secure.travis-ci.org/rvagg/nan.png)](http://travis-ci.org/rvagg/nan)\n[![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n\n<a name="news"></a>\n## News & Updates\n\n### Aug-2014: 1.3.0 release\n\n* `NanCString()` and `NanRawString()` have been deprecated in favour of new <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>, <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a> and <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>. These classes manage the underlying memory for you in a safer way than just handing off an allocated array. You should now `*NanAsciiString(handle)` to access the raw `char` data, you can also allocate on the heap if you need to keep a reference.\n* Two more <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a> overloads have been added to for parity with Node core.\n* You can now `NanNew(std::string)` (use `NanNew<std::string&>(std::string&)` to pass by reference)\n* <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>, <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a> and <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a> have been added.\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/rvagg/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/rvagg/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/rvagg/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateAsync);\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <del><a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a></del>\n * <del><a href="#api_nan_c_string"><b><code>NanCString</code></b></a></del>\n * <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>\n * <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a>\n * <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects and make new local handles.\n\nNote: Using NanNew with an std::string is possible, however, you should ensure\nto use the overload version (`NanNew(stdString)`) rather than the template\nversion (`NanNew<v8::String>(stdString)`) as there is an unnecessary\nperformance penalty to using the template version because of the inability for\ncompilers to appropriately deduce to reference types on template specialization. \n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n\n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(Object)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### <del>Local&lt;String&gt; NanSymbol(const char *)</del>\n\nDeprecated. Use `NanNew<String>` instead.\n<del>Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.</del>\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### <del>void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)</del>\n\nDeprecated. Use something else.\n\n<del>When you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:</del>\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] reinterpret_cast<char*>(decoded);\n```\n\n<a name="api_nan_c_string"></a>\n### <del>char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])</del>\n\nDeprecated. Use `NanUtf8String` instead.\n\n<del>When you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:</del>\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_ascii_string"></a>\n### NanAsciiString\n\nConvert a `String` to zero-terminated, Ascii-encoded `char *`.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanAsciiString(arg[0])));\n}\n```\n\n<a name="api_nan_utf8_string"></a>\n### NanUtf8String\n\nConvert a `String` to zero-terminated, Utf8-encoded `char *`.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUtf8String(arg[0])));\n}\n```\n\n<a name="api_nan_ucs2_string"></a>\n### NanUcs2String\n\nConvert a `String` to zero-terminated, Ucs2-encoded `uint16_t *`.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUcs2String(arg[0])));\n}\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])\nCreates a new `Local<Context>` handle.\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value [, attributes])\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value [, attributes])\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_set_instance_template"></a>\n### NanSetInstanceTemplate(templ, name, value [, attributes])\n\nUse to add instance properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This is the only proper way of calling functions.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`, note that the argument and returned value have type `int`.\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetCallback()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n\n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n\n  // Set an error message\n  void SetErrorMessage(const char *msg);\n\nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n### Contributors\n\nNAN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n</tbody></table>\n\nLicence &amp; copyright\n-----------------------\n\nCopyright (c) 2014 NAN contributors (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT +no-false-attribs license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
537 silly resolved     readmeFilename: 'README.md',
537 silly resolved     bugs: { url: 'https://github.com/rvagg/nan/issues' },
537 silly resolved     homepage: 'https://github.com/rvagg/nan',
537 silly resolved     _id: 'nan@1.3.0',
537 silly resolved     _from: 'nan@1.3.x' },
537 silly resolved   { name: 'simple-lru-cache',
537 silly resolved     version: '0.0.1',
537 silly resolved     author: { name: 'Gabriel Eisbruch' },
537 silly resolved     description: 'node-simple-lru-cache =====================',
537 silly resolved     main: 'index',
537 silly resolved     keywords: [ 'cache', 'lru', 'simple', 'fast' ],
537 silly resolved     directories: { lib: './lib' },
537 silly resolved     maintainers: [ [Object] ],
537 silly resolved     licenses: [ [Object] ],
537 silly resolved     repositories: [ [Object] ],
537 silly resolved     dependencies: {},
537 silly resolved     devDependencies: { mocha: '*', should: '*' },
537 silly resolved     scripts: { test: 'make test', bench: 'make bench' },
537 silly resolved     readme: 'node-simple-lru-cache\n=====================\n\nIt\'s a very simple and extremely fast lru cache for node.js.\n\nThis cache will priorize the lastest used keys over the least used keys, \nso when a new key is added if the cache is full, the least used key will be removed\n\n## Instalation\n    \n    npm install simple-lru-cache\n\n## Usage\n    var SimpleCache = require("simple-lru-cache")\n\n    var cache = new SimpleCache({"maxSize":1000})\n\n    //Add an Objet\n    cache.set("hello","world")\n\n    //Get an Object\n    cache.get("hello")\n\n    //Delete an Object\n    cache.del("hello")\n\n    //Reset cache\n    cache.reset()\n\n## Tests\n    \n    npm install\n    npm test\n\n## Benchmark against lru-cache\n\n      make bench\n',
537 silly resolved     readmeFilename: 'README.md',
537 silly resolved     repository:
537 silly resolved      { type: 'git',
537 silly resolved        url: 'http://github.com/mercadolibre/node-simple-lru-cache.git' },
537 silly resolved     bugs: { url: 'https://github.com/mercadolibre/node-simple-lru-cache/issues' },
537 silly resolved     homepage: 'https://github.com/mercadolibre/node-simple-lru-cache',
537 silly resolved     _id: 'simple-lru-cache@0.0.1',
537 silly resolved     _from: 'simple-lru-cache@0.0.x' } ]
538 info install bindings@1.2.1 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
539 info install connection-parse@0.0.7 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
540 info install nan@1.3.0 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
541 info install simple-lru-cache@0.0.1 into C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
542 info installOne bindings@1.2.1
543 info installOne connection-parse@0.0.7
544 info installOne nan@1.3.0
545 info installOne simple-lru-cache@0.0.1
546 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings unbuild
547 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse unbuild
548 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan unbuild
549 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache unbuild
550 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\bindings\1.2.1\package.tgz
551 silly lockFile fcf90b8a-s-hashring-node-modules-bindings tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings
552 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings C:\Users\Shreyas\AppData\Roaming\npm-cache\fcf90b8a-s-hashring-node-modules-bindings.lock
553 silly lockFile 166f30bd-cache-bindings-1-2-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\bindings\1.2.1\package.tgz
554 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\bindings\1.2.1\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\166f30bd-cache-bindings-1-2-1-package-tgz.lock
555 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\connection-parse\0.0.7\package.tgz
556 silly lockFile 015a395c-ng-node-modules-connection-parse tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse
557 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse C:\Users\Shreyas\AppData\Roaming\npm-cache\015a395c-ng-node-modules-connection-parse.lock
558 silly lockFile 7f7812bd-nnection-parse-0-0-7-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\connection-parse\0.0.7\package.tgz
559 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\connection-parse\0.0.7\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\7f7812bd-nnection-parse-0-0-7-package-tgz.lock
560 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\nan\1.3.0\package.tgz
561 silly lockFile d7239a52-odules-hashring-node-modules-nan tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan
562 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan C:\Users\Shreyas\AppData\Roaming\npm-cache\d7239a52-odules-hashring-node-modules-nan.lock
563 silly lockFile 3d465ec5--npm-cache-nan-1-3-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\nan\1.3.0\package.tgz
564 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\nan\1.3.0\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\3d465ec5--npm-cache-nan-1-3-0-package-tgz.lock
565 verbose tar unpack C:\Users\Shreyas\AppData\Roaming\npm-cache\simple-lru-cache\0.0.1\package.tgz
566 silly lockFile ff55ea8a-ng-node-modules-simple-lru-cache tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache
567 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache C:\Users\Shreyas\AppData\Roaming\npm-cache\ff55ea8a-ng-node-modules-simple-lru-cache.lock
568 silly lockFile 3fcbf0f9-mple-lru-cache-0-0-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\simple-lru-cache\0.0.1\package.tgz
569 verbose lock tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\simple-lru-cache\0.0.1\package.tgz C:\Users\Shreyas\AppData\Roaming\npm-cache\3fcbf0f9-mple-lru-cache-0-0-1-package-tgz.lock
570 silly gunzTarPerm modes [ '755', '644' ]
571 silly gunzTarPerm modes [ '755', '644' ]
572 silly gunzTarPerm modes [ '755', '644' ]
573 silly gunzTarPerm modes [ '755', '644' ]
574 silly gunzTarPerm extractEntry package.json
575 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
576 silly gunzTarPerm extractEntry package.json
577 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
578 silly gunzTarPerm extractEntry package.json
579 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
580 silly gunzTarPerm extractEntry package.json
581 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
582 silly gunzTarPerm extractEntry README.md
583 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
584 silly gunzTarPerm extractEntry LICENSE
585 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
586 silly gunzTarPerm extractEntry .npmignore
587 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
588 silly gunzTarPerm extractEntry README.md
589 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
590 silly gunzTarPerm extractEntry README.md
591 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
592 silly gunzTarPerm extractEntry bindings.js
593 silly gunzTarPerm modified mode [ 'bindings.js', 438, 420 ]
594 silly gunzTarPerm extractEntry .npmignore
595 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
596 silly gunzTarPerm extractEntry README.md
597 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
598 silly gunzTarPerm extractEntry include_dirs.js
599 silly gunzTarPerm modified mode [ 'include_dirs.js', 438, 420 ]
600 silly gunzTarPerm extractEntry .dntrc
601 silly gunzTarPerm modified mode [ '.dntrc', 438, 420 ]
602 silly gunzTarPerm extractEntry index.js
603 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
604 silly gunzTarPerm extractEntry CHANGELOG.md
605 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 438, 420 ]
606 silly gunzTarPerm extractEntry LICENSE
607 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
608 silly gunzTarPerm extractEntry index.js
609 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
610 silly gunzTarPerm extractEntry benckmark/README.md
611 silly gunzTarPerm modified mode [ 'benckmark/README.md', 438, 420 ]
612 silly gunzTarPerm extractEntry benckmark/bench.js
613 silly gunzTarPerm modified mode [ 'benckmark/bench.js', 438, 420 ]
614 silly gunzTarPerm extractEntry test/parse.test.js
615 silly gunzTarPerm modified mode [ 'test/parse.test.js', 438, 420 ]
616 silly gunzTarPerm extractEntry test/mocha.opts
617 silly gunzTarPerm modified mode [ 'test/mocha.opts', 438, 420 ]
618 silly gunzTarPerm extractEntry benckmark/engine.bench.js
619 silly gunzTarPerm modified mode [ 'benckmark/engine.bench.js', 438, 420 ]
620 silly gunzTarPerm extractEntry lib/simple_lru.js
621 silly gunzTarPerm modified mode [ 'lib/simple_lru.js', 438, 420 ]
622 silly gunzTarPerm extractEntry test.txt
623 silly gunzTarPerm modified mode [ 'test.txt', 438, 420 ]
624 silly gunzTarPerm extractEntry Makefile
625 silly gunzTarPerm modified mode [ 'Makefile', 438, 420 ]
626 silly gunzTarPerm extractEntry test/simple_lru_tests.js
627 silly gunzTarPerm modified mode [ 'test/simple_lru_tests.js', 438, 420 ]
628 silly gunzTarPerm extractEntry appveyor.yml
629 silly gunzTarPerm modified mode [ 'appveyor.yml', 438, 420 ]
630 silly gunzTarPerm extractEntry CHANGELOG.md
631 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 438, 420 ]
632 silly lockFile fcf90b8a-s-hashring-node-modules-bindings tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings
633 silly lockFile fcf90b8a-s-hashring-node-modules-bindings tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings
634 silly lockFile 166f30bd-cache-bindings-1-2-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\bindings\1.2.1\package.tgz
635 silly lockFile 166f30bd-cache-bindings-1-2-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\bindings\1.2.1\package.tgz
636 info preinstall bindings@1.2.1
637 silly gunzTarPerm extractEntry nan.h
638 silly gunzTarPerm modified mode [ 'nan.h', 438, 420 ]
639 verbose readDependencies using package.json deps
640 verbose readDependencies using package.json deps
641 silly resolved []
642 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings
643 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\bindings
644 verbose linkStuff [ true,
644 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
644 verbose linkStuff   false,
644 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules\\hashring\\node_modules' ]
645 info linkStuff bindings@1.2.1
646 verbose linkBins bindings@1.2.1
647 verbose linkMans bindings@1.2.1
648 verbose rebuildBundles bindings@1.2.1
649 info install bindings@1.2.1
650 info postinstall bindings@1.2.1
651 silly lockFile 015a395c-ng-node-modules-connection-parse tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse
652 silly lockFile 015a395c-ng-node-modules-connection-parse tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse
653 silly lockFile 7f7812bd-nnection-parse-0-0-7-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\connection-parse\0.0.7\package.tgz
654 silly lockFile 7f7812bd-nnection-parse-0-0-7-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\connection-parse\0.0.7\package.tgz
655 info preinstall connection-parse@0.0.7
656 verbose readDependencies using package.json deps
657 verbose readDependencies using package.json deps
658 silly resolved []
659 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse
660 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\connection-parse
661 verbose linkStuff [ true,
661 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
661 verbose linkStuff   false,
661 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules\\hashring\\node_modules' ]
662 info linkStuff connection-parse@0.0.7
663 verbose linkBins connection-parse@0.0.7
664 verbose linkMans connection-parse@0.0.7
665 verbose rebuildBundles connection-parse@0.0.7
666 info install connection-parse@0.0.7
667 info postinstall connection-parse@0.0.7
668 silly lockFile ff55ea8a-ng-node-modules-simple-lru-cache tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache
669 silly lockFile ff55ea8a-ng-node-modules-simple-lru-cache tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache
670 silly lockFile 3fcbf0f9-mple-lru-cache-0-0-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\simple-lru-cache\0.0.1\package.tgz
671 silly lockFile 3fcbf0f9-mple-lru-cache-0-0-1-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\simple-lru-cache\0.0.1\package.tgz
672 info preinstall simple-lru-cache@0.0.1
673 verbose readDependencies using package.json deps
674 verbose readDependencies using package.json deps
675 silly resolved []
676 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache
677 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\simple-lru-cache
678 verbose linkStuff [ true,
678 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
678 verbose linkStuff   false,
678 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules\\hashring\\node_modules' ]
679 info linkStuff simple-lru-cache@0.0.1
680 verbose linkBins simple-lru-cache@0.0.1
681 verbose linkMans simple-lru-cache@0.0.1
682 verbose rebuildBundles simple-lru-cache@0.0.1
683 info install simple-lru-cache@0.0.1
684 info postinstall simple-lru-cache@0.0.1
685 silly lockFile d7239a52-odules-hashring-node-modules-nan tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan
686 silly lockFile d7239a52-odules-hashring-node-modules-nan tar://C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan
687 silly lockFile 3d465ec5--npm-cache-nan-1-3-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\nan\1.3.0\package.tgz
688 silly lockFile 3d465ec5--npm-cache-nan-1-3-0-package-tgz tar://C:\Users\Shreyas\AppData\Roaming\npm-cache\nan\1.3.0\package.tgz
689 info preinstall nan@1.3.0
690 verbose readDependencies using package.json deps
691 verbose readDependencies using package.json deps
692 silly resolved []
693 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan
694 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring\node_modules\nan
695 verbose linkStuff [ true,
695 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
695 verbose linkStuff   false,
695 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules\\hashring\\node_modules' ]
696 info linkStuff nan@1.3.0
697 verbose linkBins nan@1.3.0
698 verbose linkMans nan@1.3.0
699 verbose rebuildBundles nan@1.3.0
700 info install nan@1.3.0
701 info postinstall nan@1.3.0
702 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
703 info build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring
704 verbose linkStuff [ true,
704 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules',
704 verbose linkStuff   false,
704 verbose linkStuff   'C:\\Users\\Shreyas\\AppData\\Roaming\\npm\\node_modules\\memcached\\node_modules' ]
705 info linkStuff hashring@3.0.0
706 verbose linkBins hashring@3.0.0
707 verbose linkMans hashring@3.0.0
708 verbose rebuildBundles hashring@3.0.0
709 verbose rebuildBundles [ 'bindings', 'connection-parse', 'nan', 'simple-lru-cache' ]
710 info install hashring@3.0.0
711 verbose unsafe-perm in lifecycle true
712 info hashring@3.0.0 Failed to exec install script
713 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules\hashring unbuild
714 info preuninstall hashring@3.0.0
715 info uninstall hashring@3.0.0
716 verbose false,C:\Users\Shreyas\AppData\Roaming\npm\node_modules,C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached\node_modules unbuild hashring@3.0.0
717 info postuninstall hashring@3.0.0
718 verbose about to build C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached
719 info C:\Users\Shreyas\AppData\Roaming\npm\node_modules\memcached unbuild
720 info preuninstall memcached@2.0.0
721 info uninstall memcached@2.0.0
722 verbose true,C:\Users\Shreyas\AppData\Roaming\npm\node_modules,C:\Users\Shreyas\AppData\Roaming\npm\node_modules unbuild memcached@2.0.0
723 info postuninstall memcached@2.0.0
724 error hashring@3.0.0 install: `node-gyp rebuild`
724 error Exit status 1
725 error Failed at the hashring@3.0.0 install script.
725 error This is most likely a problem with the hashring package,
725 error not with npm itself.
725 error Tell the author that this fails on your system:
725 error     node-gyp rebuild
725 error You can get their info via:
725 error     npm owner ls hashring
725 error There is likely additional logging output above.
726 error System Windows_NT 6.2.9200
727 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "-g" "memcached"
728 error cwd C:\Projects\NewApp
729 error node -v v0.10.24
730 error npm -v 1.3.21
731 error code ELIFECYCLE
732 verbose exit [ 1, true ]
